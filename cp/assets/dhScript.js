/* $(function () {
	$(".navbar-toggler").on('click', function () {
		if ($(".navbar-collapse").hasClass('show')) {
			setTimeout(function () {
				$(".header-actions").toggleClass('hide');
			}, 350);
		}
		else {
			$(".header-actions").toggleClass('hide');
		}
	});

}); */

$(document).ready(function () {
	$("body").tooltip({ selector: '[data-toggle=tooltip]', trigger: 'hover' });
	if (document.location.search.substr(1).split("&") == 'logout') {
		setTimeout(function () { $.notify('You Have Successfully Logout...') }, 500);
		var newurl = window.location.protocol + "//" + window.location.host + window.location.pathname ;
		window.history.pushState({ path: newurl }, '', newurl);
	}
	var parsleyConfig = {
		errorsContainer: function (pEle) {
			var $err = pEle.$element.closest(".form-group").children('.errorBlock');
			return $err;
		},
	}
	$('.dhForm').parsley(parsleyConfig);
	setTimeout(dhCheckNotify, 500);

	$("body").on('change blur','input:not(.nocase)',function(){
		this.value = this.value.toUpperCase();
	});
});



	 window.dhStartLoad = function(){
		 var preloader_style = '#preloader{position:fixed;top:0;left:0;right:0;bottom:0;z-index:9999;overflow:hidden;background:#ffffff82}#preloader:before{content:"";position:fixed;top:calc(50% - 30px);left:calc(50% - 30px);border:3px solid #074692;border-top-color:#d1e6f9;border-radius:50%;width:60px;height:60px;-webkit-animation:animate-preloader 1s linear infinite;animation:animate-preloader 1s linear infinite}@-webkit-keyframes animate-preloader{0%{transform:rotate(0)}100%{transform:rotate(360deg)}}@keyframes animate-preloader{0%{transform:rotate(0)}100%{transform:rotate(360deg)}}';
	    $("<style id='preloader_style'></style>").appendTo("head").html(preloader_style);
	    $('body').prepend('<div id="preloader"></div>');
	  }
	  window.dhEndLoad = function(){
	    $('#preloader').fadeOut('fast', function() {
	        $(this).remove();
	        $("#preloader_style").remove();
	      })
	  }

	$(function(){
		$('body').on('submit', '.dhForm', function (event) {
			event.preventDefault();
			var reset_form= $(this);
			var submit_button= $( this ).find(":submit");
			var pageURL = $(location).attr("href").substring(0, $(location).attr("href").indexOf('?'));
			if ($(this).attr("action")) { pageURL = $(this).attr("action")}
            var action = submit_button.attr('name');
           	if(action==undefined){action = "submit";}
            submit_button.attr('disabled','true');
            if($(this).find(".di_prevent_double_submit").length==0){
            	$(this).append('<input class="di_prevent_double_submit" type="hidden" name="'+action+'" value="submit" /> ');
        	}
            dhStartLoad();
			$.ajax({
					url:pageURL,
					data: new FormData($(this)[0]),
				    cache: false,
				    contentType: false,
				    processData: false,
				    type: 'POST',
					success:function(resp){
						var obj=JSON.parse(resp);
						if (obj.dhSession){
							sessionStorage.setItem("dhSession", JSON.stringify(obj.dhSession));
						}

						if(obj.result==true)
						{
							if (obj.redirect && obj.redirect!='')
							{
								location.href=obj.redirect;
							}
							else
							{
								reset_form[0].reset();
								dhCheckNotify();
							}
						}
						else
						{
							dhCheckNotify();
						}

						if (typeof obj.dhFunction !== 'undefined') {
							var dhFunction = obj.dhFunction;
							window[dhFunction]()
						}
						if (obj.dhInsertId){
							sessionStorage.setItem("dhInsertId", obj.dhInsertId);
						}
					},
					complete:function()
					{
						dhEndLoad();
						$(reset_form).parsley().reset();
						submit_button.removeAttr('disabled');
					}
				});
        });

		$('body').on('submit', '.dhFormModal', function (event) {
			event.preventDefault();
			var reset_form = $(this);
			$.confirm({
				title: 'Confirm!',
				content: 'Are you sure to submit details ?',
				// closeIcon: true,
				// backgroundDismiss: true,
				buttons: {
					Proceed: {
						text: '<i class="fa fa-check me-2"></i>Yes',
						btnClass: 'btn-green',
						keys: ['enter'],
						action: function () {
							var submit_button = reset_form.find(":submit");
							var pageURL = $(location).attr("href").substring(0, $(location).attr("href").indexOf('?'));
							if (reset_form.attr("action")) { pageURL = reset_form.attr("action") }
							var action = submit_button.attr('name');
							if (action == undefined) { action = "submit"; }
							submit_button.attr('disabled', 'true');
							if(reset_form.find(".di_prevent_double_submit").length==0){
								reset_form.append('<input class="di_prevent_double_submit" type="hidden" name="'+action+'" value="submit" /> ');
							}
							dhStartLoad();
							$.ajax({
								url: pageURL,
								data: new FormData(reset_form[0]),
								cache: false,
								contentType: false,
								processData: false,
								type: 'POST',
								success: function (resp) {
									var obj = JSON.parse(resp);
									if (obj.dhSession){
										sessionStorage.setItem("dhSession", JSON.stringify(obj.dhSession));
									}
									if (obj.result == true) {
										if (obj.redirect && obj.redirect != '') {
											location.href = obj.redirect;
										}
										else {
											reset_form[0].reset();
											dhCheckNotify();
										}
									}
									else {
										dhCheckNotify();
									}
									if (typeof obj.dhFunction !== 'undefined') {
										var dhFunction = obj.dhFunction;
										window[dhFunction]()
									}
								},
								complete: function () {
									dhEndLoad();
									$(reset_form).parsley().reset();
									submit_button.removeAttr('disabled');								}
							});
						}
					},
					Cancel: {
						text: '<i class="fa fa-times me-2"></i>No',
						btnClass: 'btn-red',
						action: function () { }// multiple classes.
					},
				}
			});
		});


        $('body').on('keypress','.numInput', function(){
	      return /\d/.test(String.fromCharCode(event.keyCode || event.which));
	    });

		$('body').on('keypress','.numInputPoint', function(){
	     if ((event.which != 46 || $(this).val().indexOf('.') != -1) && (event.which < 48 || event.which > 57)) {
	        event.preventDefault();
	      }
	    });

		$('body').on('keypress', '.numInputLogin', function () {
			if (event.which != 13 && (event.which < 48 || event.which > 57)) {
				event.preventDefault();
			}
		});

		/* $('body').on('blur', '.dh-defaultZero', function () {
			if (this.value == '') this.value = '0';
		}).on('focus', '.dh-defaultZero', function () {
			if (this.value == '0') this.value = '';
		}); */

		$('body').on('blur', '.dh-defaultZero', function () {
			if (this.value == '') this.value = '0';
		}).on('focus', '.dh-defaultZero', function () {
			if (this.value == '0') this.value = '';
		}).on('keypress', '.dh-defaultZero', function () {
			return /\d/.test(String.fromCharCode(event.keyCode || event.which));
		});


		$('body').on('blur', '.dh-defaultPointZero', function () {
			if (this.value == '') this.value = '0';
		}).on('focus', '.dh-defaultZero', function () {
			if (this.value == '0') this.value = '';
		}).on('keypress', '.dh-defaultZero', function () {
			if ((event.which != 46 || $(this).val().indexOf('.') != -1) && (event.which < 48 || event.which > 57)) {
				event.preventDefault();
			}
		});



		$("body").on("change","input[type='file']", function (){
	        var max_file_size='';
	        var lg = $(this)[0].files.length;
	        var attr = $(this).attr('di-max-file');
	        var max_file=typeof attr !== 'undefined' && attr !== false?$(this).attr('di-max-file'):1;
	        if(lg <= max_file){
	          var fileSize = 0;
	          var perFileSize = 0;
	          var items = $(this)[0].files;
	          for(var i = 0; i < lg; i++){
	            fileSize = items[i].size; // get file size
	            if(fileSize > 2000000){
	             alert("Please upload file less than 2MB. Thanks!!");
	             $(this).val('');
	            }
	          }

	        }
	        else{
	           alert("Please Upload only "+max_file+" Files. Thanks!!");
	           $(this).val('');
	        }
    	});

	});


function dhCheckNotify(){
	$(document).ready(function () {
	 if(sessionStorage.getItem("dhSession")){
		setTimeout(()=>{
			let notify_response = JSON.parse(sessionStorage.getItem("dhSession"));
			$.each(notify_response, function (action, message) {
				$.notify(message,action);
			});
			sessionStorage.clear();
		}, 500);
	 }
  });
}

// ============================notify.js========================
!function (t) { "function" == typeof define && define.amd ? define(["jquery"], t) : "object" == typeof module && module.exports ? module.exports = function (e, i) { return void 0 === i && (i = "undefined" != typeof window ? require("jquery") : require("jquery")(e)), t(i), i } : t(jQuery) }(function (t) { var e = [].indexOf || function (t) { for (var e = 0, i = this.length; e < i; e++)if (e in this && this[e] === t) return e; return -1 }, i = "notifyjs", n = { t: "top", m: "middle", b: "bottom", l: "left", c: "center", r: "right" }, o = ["l", "c", "r"], r = ["t", "m", "b"], s = ["t", "b", "l", "r"], a = { t: "b", m: null, b: "t", l: "r", c: null, r: "l" }, l = {}, h = { name: "core", html: '<div class="' + i + '-wrapper">\n\t<div class="' + i + '-arrow"></div>\n\t<div class="' + i + '-container"></div>\n</div>', css: "." + i +"-corner {\n\tposition: fixed;\n\tmargin: 5px;\n\tz-index: 1005;\n}\n\n."+i+"-corner ."+i+"-wrapper,\n."+i+"-corner ."+i+"-container {\n\tposition: relative;\n\tdisplay: block;\n\theight: inherit;\n\twidth: inherit;\n\tmargin: 3px;\n}\n\n."+i+"-wrapper {\n\tz-index: 1001;\n\tposition: absolute;\n\tdisplay: inline-block;\n\theight: 0;\n\twidth: 0;\n}\n\n."+i+"-container {\n\tdisplay: none;\n\tz-index: 1001;\n\tposition: absolute;\n}\n\n."+i+"-hidable {\n\tcursor: pointer;\n}\n\n[data-notify-text],[data-notify-html] {\n\tposition: relative;\n}\n\n."+i+"-arrow {\n\tposition: absolute;\n\tz-index: 1002;\n\twidth: 0;\n\theight: 0;\n}"},c={"border-radius":["-webkit-","-moz-"]},p=function(e,n){if(!e)throw"Missing Style name";if(!n)throw"Missing Style definition";if(!n.html)throw"Missing Style HTML";var o=l[e];o&&o.cssElem&&(window.console&&console.warn("notify: overwriting style '"+e+"'"),l[e].cssElem.remove()),n.name=e,l[e]=n;var r="";n.classes&&t.each(n.classes,function(e,o){return r+="."+i+"-"+n.name+"-"+e+" {\n",t.each(o,function(e,i){return c[e]&&t.each(c[e],function(t,n){return r+="\t"+n+e+": "+i+";\n"}),r+="\t"+e+": "+i+";\n"}),r+="}\n"}),n.css&&(r+="/* styles for "+n.name+" */\n"+n.css),r&&(n.cssElem=d(r),n.cssElem.attr("id","notify-"+n.name));var s={},a=t(n.html);f("html",a,s),f("text",a,s),n.fields=s},d=function(e){var i;(i=b("style")).attr("type","text/css"),t("head").append(i);try{i.html(e)}catch(t){i[0].styleSheet.cssText=e}return i},f=function(e,i,n){var o;return"html"!==e&&(e="text"),u(i,"["+(o="data-notify-"+e)+"]").each(function(){var i;(i=t(this).attr(o))||(i="notify!blank"),n[i]=e})},u=function(t,e){return t.is(e)?t:t.find(e)},m={clickToHide:!0,autoHide:!0,autoHideDelay:5e3,arrowShow:!0,arrowSize:5,breakNewLines:!0,elementPosition:"bottom",globalPosition:"top right",style:"bootstrap",className:"error",showAnimation:"slideDown",showDuration:400,hideAnimation:"slideUp",hideDuration:200,gap:5},y=function(e,i){var n;return(n=function(){}).prototype=e,t.extend(!0,new n,i)},b=function(e){return t("<"+e+"></"+e+">")},w={},g=function(e){var i;return e.is("[type=radio]")&&(i=e.parents("form:first").find("[type=radio]").filter(function(i,n){return t(n).attr("name")===e.attr("name")}),e=i.first()),e},v=function(t,e,i){var o;if("string"==typeof i)i=parseInt(i,10);else if("number"!=typeof i)return;if(!isNaN(i))return o=n[a[e.charAt(0)]],e,void 0!==t[o]&&(e=n[o.charAt(0)],i=-i),void 0===t[e]?t[e]=i:t[e]+=i,null},x=function(t,e,i){if("l"===t||"t"===t)return 0;if("c"===t||"m"===t)return i/2-e/2;if("r"===t||"b"===t)return i-e;throw"Invalid alignment"},k=function(t){return k.e=k.e||b("div"),k.e.text(t).html()};function S(e,n,o){"string"==typeof o&&(o={className:o}),this.options=y(m,t.isPlainObject(o)?o:{}),this.loadHTML(),this.wrapper=t(h.html),this.options.clickToHide&&this.wrapper.addClass(i+"-hidable"),this.wrapper.data(i,this),this.arrow=this.wrapper.find("."+i+"-arrow"),this.container=this.wrapper.find("."+i+"-container"),this.container.append(this.userContainer),e&&e.length&&(this.elementType=e.attr("type"),this.originalElement=e,this.elem=g(e),this.elem.data(i,this),this.elem.before(this.wrapper)),this.container.hide(),this.run(n)}S.prototype.loadHTML=function(){var e;e=this.getStyle(),this.userContainer=t(e.html),this.userFields=e.fields},S.prototype.show=function(t,e){var i,n,o,r,s,a;if(a=this,n=function(){if(t||a.elem||a.destroy(),e)return e()},s=this.container.parent().parents(":hidden").length>0,o=this.container.add(this.arrow),i=[],s&&t)r="show";else if(s&&!t)r="hide";else if(!s&&t)r=this.options.showAnimation,i.push(this.options.showDuration);else{if(s||t)return n();r=this.options.hideAnimation,i.push(this.options.hideDuration)}return i.push(n),o[r].apply(o,i)},S.prototype.setGlobalPosition=function(){var e=this.getPosition(),o=e[0],r=e[1],s=n[o],a=n[r],l=o+"|"+r,h=w[l];if(!h||!document.body.contains(h[0])){h=w[l]=b("div");var c={};c[s]=0,"middle"===a?c.top="45%":"center"===a?c.left="45%":c[a]=0,h.css(c).addClass(i+"-corner"),t("body").append(h)}return h.prepend(this.wrapper)},S.prototype.setElementPosition=function(){var i,l,h,c,p,d,f,u,m,y,b,w,g,k,S,C,P,N,j,H,T,A,M,z,D,E,q,L;for(M=(E=this.getPosition())[0],A=E[1],E[2],b=this.elem.position(),u=this.elem.outerHeight(),w=this.elem.outerWidth(),m=this.elem.innerHeight(),y=this.elem.innerWidth(),L=this.wrapper.position(),p=this.container.height(),d=this.container.width(),N=n[M],(f={})[T=n[H=a[M]]]="b"===M?u:"r"===M?w:0,v(f,"top",b.top-L.top),v(f,"left",b.left-L.left),k=0,C=(q=["top","left"]).length;k<C;k++)z=q[k],(j=parseInt(this.elem.css("margin-"+z),10))&&v(f,z,j);if(g=Math.max(0,this.options.gap-(this.options.arrowShow?h:0)),v(f,T,g),this.options.arrowShow){for(h=this.options.arrowSize,l=t.extend({},f),i=this.userContainer.css("border-color")||this.userContainer.css("border-top-color")||this.userContainer.css("background-color")||"white",S=0,P=s.length;S<P;S++)D=n[z=s[S]],z!==H&&(c=D===N?i:"transparent",l["border-"+D]=h+"px solid "+c);v(f,n[H],h),e.call(s,A)>=0&&v(l,n[A],2*h)}else this.arrow.hide();if(e.call(r,M)>=0?(v(f,"left",x(A,d,w)),l&&v(l,"left",x(A,h,y))):e.call(o,M)>=0&&(v(f,"top",x(A,p,u)),l&&v(l,"top",x(A,h,m))),this.container.is(":visible")&&(f.display="block"),this.container.removeAttr("style").css(f),l)return this.arrow.removeAttr("style").css(l)},S.prototype.getPosition=function(){var i,a,l,h,c,p,d;if(0===(i=function(e){var i;return i=[],t.each(e.split(/\W+/),function(t,e){var o;if(o=e.toLowerCase().charAt(0),n[o])return i.push(o)}),i}(this.options.position||(this.elem?this.options.elementPosition:this.options.globalPosition))).length&&(i[0]="b"),a=i[0],e.call(s,a)<0)throw"Must be one of ["+s+"]";return(1===i.length||(l=i[0],e.call(r,l)>=0&&(h=i[1],e.call(o,h)<0))||(c=i[0],e.call(o,c)>=0&&(p=i[1],e.call(r,p)<0)))&&(i[1]=(d=i[0],e.call(o,d)>=0?"m":"l")),2===i.length&&(i[2]=i[1]),i},S.prototype.getStyle=function(t){var e;if(t||(t=this.options.style),t||(t="default"),!(e=l[t]))throw"Missing style: "+t;return e},S.prototype.updateClasses=function(){var e,n;return e=["base"],t.isArray(this.options.className)?e=e.concat(this.options.className):this.options.className&&e.push(this.options.className),n=this.getStyle(),e=t.map(e,function(t){return i+"-"+n.name+"-"+t}).join(" "),this.userContainer.attr("class",e)},S.prototype.run=function(e,i){var n,o,r,s,a;if(t.isPlainObject(i)?t.extend(this.options,i):"string"===t.type(i)&&(this.options.className=i),!this.container||e){if(this.container||e){for(r in o={},t.isPlainObject(e)?o=e:o["notify!blank"]=e,o)n=o[r],(s=this.userFields[r])&&("text"===s&&(n=k(n),this.options.breakNewLines&&(n=n.replace(/\n/g,"<br/>"))),a="notify!blank"===r?"":"="+r,u(this.userContainer,"[data-notify-"+s+a+"]").html(n));this.updateClasses(),this.elem?this.setElementPosition():this.setGlobalPosition(),this.show(!0),this.options.autoHide&&(clearTimeout(this.autohideTimer),this.autohideTimer=setTimeout(this.show.bind(this,!1),this.options.autoHideDelay))}}else this.show(!1)},S.prototype.destroy=function(){this.wrapper.data(i,null),this.wrapper.remove()},t.notify=function(e,i,n){return e&&e.nodeName||e.jquery?t(e).notify(i,n):(n=i,new S(null,i=e,n)),e},t.fn.notify=function(e,n){return t(this).each(function(){var o=g(t(this)).data(i);o&&o.destroy();new S(t(this),e,n)}),this},t.extend(t.notify,{defaults:function(e){return t.extend(m,e)},addStyle:p,removeStyle:function(t){if(!t)throw"Missing Style name";l[t]&&delete l[t]},pluginOptions:m,getStyle:function(t){return l[t]},insertCSS:d}),p("bootstrap",{html:"<div>\n<span data-notify-text></span>\n</div>",classes:{base:{"font-weight":"bold",padding:"8px 15px 8px 14px","background-color":"#fcf8e3",border:"1px solid #fbeed5","border-radius":"4px","white-space":"nowrap","background-repeat":"no-repeat","background-position":"3px 7px"},error:{color:"#fff","background-color":"#ec536c","border-color":"#ec536c"},success:{color:"#fff","background-color":"#29b348","border-color":"#29b348"},info:{color:"#fff","background-color":"#01b8ff","border-color":"#01b8ff"},warning:{color:"#fff","background-color":"#F7C600","border-color":"#F7C600"}}}),t(function(){d(h.css).attr("id","core-notify"),t(document).on("click","."+i+"-hidable",function(e){t(this).trigger("notify-hide")}),t(document).on("notify-hide","."+i+"-wrapper",function(e){var n=t(this).data(i);n&&n.show(!1)})})});

// ============================parsley.js=======================
!function (t, e) { "object" == typeof exports && "undefined" != typeof module ? module.exports = e(require("jquery")) : "function" == typeof define && define.amd ? define(["jquery"], e) : (t = t || self).parsley = e(t.jQuery) }(this, function (t) { "use strict"; function e(t) { return (e = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (t) { return typeof t } : function (t) { return t && "function" == typeof Symbol && t.constructor === Symbol && t !== Symbol.prototype ? "symbol" : typeof t })(t) } function i() { return (i = Object.assign || function (t) { for (var e = 1; e < arguments.length; e++) { var i = arguments[e]; for (var r in i) Object.prototype.hasOwnProperty.call(i, r) && (t[r] = i[r]) } return t }).apply(this, arguments) } function r(t, e) { return function (t) { if (Array.isArray(t)) return t }(t) || function (t, e) { if (!(Symbol.iterator in Object(t) || "[object Arguments]" === Object.prototype.toString.call(t))) return; var i = [], r = !0, n = !1, s = void 0; try { for (var a, o = t[Symbol.iterator](); !(r = (a = o.next()).done) && (i.push(a.value), !e || i.length !== e); r = !0); } catch (t) { n = !0, s = t } finally { try { r || null == o.return || o.return() } finally { if (n) throw s } } return i }(t, e) || function () { throw new TypeError("Invalid attempt to destructure non-iterable instance") }() } function n(t) { return function (t) { if (Array.isArray(t)) { for (var e = 0, i = new Array(t.length); e < t.length; e++)i[e] = t[e]; return i } }(t) || function (t) { if (Symbol.iterator in Object(t) || "[object Arguments]" === Object.prototype.toString.call(t)) return Array.from(t) }(t) || function () { throw new TypeError("Invalid attempt to spread non-iterable instance") }() } var s = 1, a = {}, o = { attr: function (t, e, i) { var r, n, s, a = new RegExp("^" + e, "i"); if (void 0 === i) i = {}; else for (r in i) i.hasOwnProperty(r) && delete i[r]; if (!t) return i; for (r = (s = t.attributes).length; r--;)(n = s[r]) && n.specified && a.test(n.name) && (i[this.camelize(n.name.slice(e.length))] = this.deserializeValue(n.value)); return i }, checkAttr: function (t, e, i) { return t.hasAttribute(e + i) }, setAttr: function (t, e, i, r) { t.setAttribute(this.dasherize(e + i), String(r)) }, getType: function (t) { return t.getAttribute("type") || "text" }, generateID: function () { return "" + s++ }, deserializeValue: function (t) { var e; try { return t ? "true" == t || "false" != t && ("null" == t ? null : isNaN(e = Number(t)) ? /^[\[\{]/.test(t) ? JSON.parse(t) : t : e) : t } catch (e) { return t } }, camelize: function (t) { return t.replace(/-+(.)?/g, function (t, e) { return e ? e.toUpperCase() : "" }) }, dasherize: function (t) { return t.replace(/::/g, "/").replace(/([A-Z]+)([A-Z][a-z])/g, "$1_$2").replace(/([a-z\d])([A-Z])/g, "$1_$2").replace(/_/g, "-").toLowerCase() }, warn: function () { var t; window.console && "function" == typeof window.console.warn && (t = window.console).warn.apply(t, arguments) }, warnOnce: function (t) { a[t] || (a[t] = !0, this.warn.apply(this, arguments)) }, _resetWarnings: function () { a = {} }, trimString: function (t) { return t.replace(/^\s+|\s+$/g, "") }, parse: { date: function (t) { var e = t.match(/^(\d{4,})-(\d\d)-(\d\d)$/); if (!e) return null; var i = r(e.map(function (t) { return parseInt(t, 10) }), 4), n = (i[0], i[1]), s = i[2], a = i[3], o = new Date(n, s - 1, a); return o.getFullYear() !== n || o.getMonth() + 1 !== s || o.getDate() !== a ? null : o }, string: function (t) { return t }, integer: function (t) { return isNaN(t) ? null : parseInt(t, 10) }, number: function (t) { if (isNaN(t)) throw null; return parseFloat(t) }, boolean: function (t) { return !/^\s*false\s*$/i.test(t) }, object: function (t) { return o.deserializeValue(t) }, regexp: function (t) { var e = ""; return /^\/.*\/(?:[gimy]*)$/.test(t) ? (e = t.replace(/.*\/([gimy]*)$/, "$1"), t = t.replace(new RegExp("^/(.*?)/" + e + "$"), "$1")) : t = "^" + t + "$", new RegExp(t, e) } }, parseRequirement: function (t, e) { var i = this.parse[t || "string"]; if (!i) throw 'Unknown requirement specification: "' + t + '"'; var r = i(e); if (null === r) throw "Requirement is not a ".concat(t, ': "').concat(e, '"'); return r }, namespaceEvents: function (e, i) { return (e = this.trimString(e || "").split(/\s+/))[0] ? t.map(e, function (t) { return "".concat(t, ".").concat(i) }).join(" ") : "" }, difference: function (e, i) { var r = []; return t.each(e, function (t, e) { -1 == i.indexOf(e) && r.push(e) }), r }, all: function (e) { return t.when.apply(t, n(e).concat([42, 42])) }, objectCreate: Object.create || function () { var t = function () { }; return function (i) { if (arguments.length > 1) throw Error("Second argument not supported"); if ("object" != e(i)) throw TypeError("Argument must be an object"); t.prototype = i; var r = new t; return t.prototype = null, r } }(), _SubmitSelector: 'input[type="submit"], button:submit' }, l = { namespace: "data-parsley-", inputs: "input, textarea, select", excluded: "input[type=button], input[type=submit], input[type=reset], input[type=hidden]", priorityEnabled: !0, multiple: null, group: null, uiEnabled: !0, validationThreshold: 3, focus: "first", trigger: !1, triggerAfterFailure: "input", errorClass: "parsley-error", successClass: "parsley-success", classHandler: function (t) { }, errorsContainer: function (t) { }, errorsWrapper: '<ul class="parsley-errors-list"></ul>', errorTemplate: "<li></li>" }, u = function () { this.__id__ = o.generateID() }; u.prototype = { asyncSupport: !0, _pipeAccordingToValidationResult: function () { var e = this, i = function () { var i = t.Deferred(); return !0 !== e.validationResult && i.reject(), i.resolve().promise() }; return [i, i] }, actualizeOptions: function () { return o.attr(this.element, this.options.namespace, this.domOptions), this.parent && this.parent.actualizeOptions && this.parent.actualizeOptions(), this }, _resetOptions: function (t) { for (var e in this.domOptions = o.objectCreate(this.parent.options), this.options = o.objectCreate(this.domOptions), t) t.hasOwnProperty(e) && (this.options[e] = t[e]); this.actualizeOptions() }, _listeners: null, on: function (t, e) { return this._listeners = this._listeners || {}, (this._listeners[t] = this._listeners[t] || []).push(e), this }, subscribe: function (e, i) { t.listenTo(this, e.toLowerCase(), i) }, off: function (t, e) { var i = this._listeners && this._listeners[t]; if (i) if (e) for (var r = i.length; r--;)i[r] === e && i.splice(r, 1); else delete this._listeners[t]; return this }, unsubscribe: function (e, i) { t.unsubscribeTo(this, e.toLowerCase()) }, trigger: function (t, e, i) { e = e || this; var r, n = this._listeners && this._listeners[t]; if (n) for (var s = n.length; s--;)if (!1 === (r = n[s].call(e, e, i))) return r; return !this.parent || this.parent.trigger(t, e, i) }, asyncIsValid: function (t, e) { return o.warnOnce("asyncIsValid is deprecated; please use whenValid instead"), this.whenValid({ group: t, force: e }) }, _findRelated: function () { return this.options.multiple ? t(this.parent.element.querySelectorAll("[".concat(this.options.namespace, 'multiple="').concat(this.options.multiple, '"]'))) : this.$element } }; var d = function (e) { t.extend(!0, this, e) }; d.prototype = { validate: function (t, e) { if (this.fn) return arguments.length > 3 && (e = [].slice.call(arguments, 1, -1)), this.fn(t, e); if (Array.isArray(t)) { if (!this.validateMultiple) throw "Validator `" + this.name + "` does not handle multiple values"; return this.validateMultiple.apply(this, arguments) } var i = arguments[arguments.length - 1]; if (this.validateDate && i._isDateInput()) return arguments[0] = o.parse.date(arguments[0]), null !== arguments[0] && this.validateDate.apply(this, arguments); if (this.validateNumber) return !t || !isNaN(t) && (arguments[0] = parseFloat(arguments[0]), this.validateNumber.apply(this, arguments)); if (this.validateString) return this.validateString.apply(this, arguments); throw "Validator `" + this.name + "` only handles multiple values" }, parseRequirements: function (e, i) { if ("string" != typeof e) return Array.isArray(e) ? e : [e]; var r = this.requirementType; if (Array.isArray(r)) { for (var n = function (t, e) { var i = t.match(/^\s*\[(.*)\]\s*$/); if (!i) throw 'Requirement is not an array: "' + t + '"'; var r = i[1].split(",").map(o.trimString); if (r.length !== e) throw "Requirement has " + r.length + " values when " + e + " are needed"; return r }(e, r.length), s = 0; s < n.length; s++)n[s] = o.parseRequirement(r[s], n[s]); return n } return t.isPlainObject(r) ? function (t, e, i) { var r = null, n = {}; for (var s in t) if (s) { var a = i(s); "string" == typeof a && (a = o.parseRequirement(t[s], a)), n[s] = a } else r = o.parseRequirement(t[s], e); return [r, n] }(r, e, i) : [o.parseRequirement(r, e)] }, requirementType: "string", priority: 2 }; var h = function (t, e) { this.__class__ = "ValidatorRegistry", this.locale = "en", this.init(t || {}, e || {}) }, c = { email: /^((([a-zA-Z]|\d|[!#\$%&'\*\+\-\/=\?\^_`{\|}~]|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])+(\.([a-zA-Z]|\d|[!#\$%&'\*\+\-\/=\?\^_`{\|}~]|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])+)*)|((\x22)((((\x20|\x09)*(\x0d\x0a))?(\x20|\x09)+)?(([\x01-\x08\x0b\x0c\x0e-\x1f\x7f]|\x21|[\x23-\x5b]|[\x5d-\x7e]|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])|(\\([\x01-\x09\x0b\x0c\x0d-\x7f]|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF]))))*(((\x20|\x09)*(\x0d\x0a))?(\x20|\x09)+)?(\x22)))@((([a-zA-Z]|\d|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])|(([a-zA-Z]|\d|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])([a-zA-Z]|\d|-|_|~|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])*([a-zA-Z]|\d|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])))\.)+(([a-zA-Z]|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])([a-zA-Z]|\d|-|_|~|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])*([a-zA-Z]|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF]))$/, number: /^-?(\d*\.)?\d+(e[-+]?\d+)?$/i, integer: /^-?\d+$/, digits: /^\d+$/, alphanum: /^\w+$/i, date: { test: function (t) { return null !== o.parse.date(t) } }, url: new RegExp("^(?:(?:https?|ftp)://)?(?:\\S+(?::\\S*)?@)?(?:(?:[1-9]\\d?|1\\d\\d|2[01]\\d|22[0-3])(?:\\.(?:1?\\d{1,2}|2[0-4]\\d|25[0-5])){2}(?:\\.(?:[1-9]\\d?|1\\d\\d|2[0-4]\\d|25[0-4]))|(?:(?:[a-zA-Z\\u00a1-\\uffff0-9]-*)*[a-zA-Z\\u00a1-\\uffff0-9]+)(?:\\.(?:[a-zA-Z\\u00a1-\\uffff0-9]-*)*[a-zA-Z\\u00a1-\\uffff0-9]+)*(?:\\.(?:[a-zA-Z\\u00a1-\\uffff]{2,})))(?::\\d{2,5})?(?:/\\S*)?$") }; c.range = c.number; var p = function (t) { var e = ("" + t).match(/(?:\.(\d+))?(?:[eE]([+-]?\d+))?$/); return e ? Math.max(0, (e[1] ? e[1].length : 0) - (e[2] ? +e[2] : 0)) : 0 }, f = function (t, e) { return function (i) { for (var r = arguments.length, s = new Array(r > 1 ? r - 1 : 0), a = 1; a < r; a++)s[a - 1] = arguments[a]; return s.pop(), e.apply(void 0, [i].concat(n(function (t, e) { return e.map(o.parse[t]) }(t, s)))) } }, m = function (t) { return { validateDate: f("date", t), validateNumber: f("number", t), requirementType: t.length <= 2 ? "string" : ["string", "string"], priority: 30 } }; h.prototype = { init: function (t, e) { for (var r in this.catalog = e, this.validators = i({}, this.validators), t) this.addValidator(r, t[r].fn, t[r].priority); window.Parsley.trigger("parsley:validator:init") }, setLocale: function (t) { if (void 0 === this.catalog[t]) throw new Error(t + " is not available in the catalog"); return this.locale = t, this }, addCatalog: function (t, i, r) { return "object" === e(i) && (this.catalog[t] = i), !0 === r ? this.setLocale(t) : this }, addMessage: function (t, e, i) { return void 0 === this.catalog[t] && (this.catalog[t] = {}), this.catalog[t][e] = i, this }, addMessages: function (t, e) { for (var i in e) this.addMessage(t, i, e[i]); return this }, addValidator: function (t, e, i) { if (this.validators[t]) o.warn('Validator "' + t + '" is already defined.'); else if (l.hasOwnProperty(t)) return void o.warn('"' + t + '" is a restricted keyword and is not a valid validator name.'); return this._setValidator.apply(this, arguments) }, hasValidator: function (t) { return !!this.validators[t] }, updateValidator: function (t, e, i) { return this.validators[t] ? this._setValidator.apply(this, arguments) : (o.warn('Validator "' + t + '" is not already defined.'), this.addValidator.apply(this, arguments)) }, removeValidator: function (t) { return this.validators[t] || o.warn('Validator "' + t + '" is not defined.'), delete this.validators[t], this }, _setValidator: function (t, i, r) { for (var n in "object" !== e(i) && (i = { fn: i, priority: r }), i.validate || (i = new d(i)), this.validators[t] = i, i.messages || {}) this.addMessage(n, t, i.messages[n]); return this }, getErrorMessage: function (t) { var e; "type" === t.name ? e = (this.catalog[this.locale][t.name] || {})[t.requirements] : e = this.formatMessage(this.catalog[this.locale][t.name], t.requirements); return e || this.catalog[this.locale].defaultMessage || this.catalog.en.defaultMessage }, formatMessage: function (t, i) { if ("object" === e(i)) { for (var r in i) t = this.formatMessage(t, i[r]); return t } return "string" == typeof t ? t.replace(/%s/i, i) : "" }, validators: { notblank: { validateString: function (t) { return /\S/.test(t) }, priority: 2 }, required: { validateMultiple: function (t) { return t.length > 0 }, validateString: function (t) { return /\S/.test(t) }, priority: 512 }, type: { validateString: function (t, e) { var i = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : {}, r = i.step, n = void 0 === r ? "any" : r, s = i.base, a = void 0 === s ? 0 : s, o = c[e]; if (!o) throw new Error("validator type `" + e + "` is not supported"); if (!t) return !0; if (!o.test(t)) return !1; if ("number" === e && !/^any$/i.test(n || "")) { var l = Number(t), u = Math.max(p(n), p(a)); if (p(l) > u) return !1; var d = function (t) { return Math.round(t * Math.pow(10, u)) }; if ((d(l) - d(a)) % d(n) != 0) return !1 } return !0 }, requirementType: { "": "string", step: "string", base: "number" }, priority: 256 }, pattern: { validateString: function (t, e) { return !t || e.test(t) }, requirementType: "regexp", priority: 64 }, minlength: { validateString: function (t, e) { return !t || t.length >= e }, requirementType: "integer", priority: 30 }, maxlength: { validateString: function (t, e) { return t.length <= e }, requirementType: "integer", priority: 30 }, length: { validateString: function (t, e, i) { return !t || t.length >= e && t.length <= i }, requirementType: ["integer", "integer"], priority: 30 }, mincheck: { validateMultiple: function (t, e) { return t.length >= e }, requirementType: "integer", priority: 30 }, maxcheck: { validateMultiple: function (t, e) { return t.length <= e }, requirementType: "integer", priority: 30 }, check: { validateMultiple: function (t, e, i) { return t.length >= e && t.length <= i }, requirementType: ["integer", "integer"], priority: 30 }, min: m(function (t, e) { return t >= e }), max: m(function (t, e) { return t <= e }), range: m(function (t, e, i) { return t >= e && t <= i }), equalto: { validateString: function (e, i) { if (!e) return !0; var r = t(i); return r.length ? e === r.val() : e === i }, priority: 256 }, euvatin: { validateString: function (t, e) { if (!t) return !0; return /^[A-Z][A-Z][A-Za-z0-9 -]{2,}$/.test(t) }, priority: 30 } } }; var g = {}; g.Form = { _actualizeTriggers: function () { var t = this; this.$element.on("submit.Parsley", function (e) { t.onSubmitValidate(e) }), this.$element.on("click.Parsley", o._SubmitSelector, function (e) { t.onSubmitButton(e) }), !1 !== this.options.uiEnabled && this.element.setAttribute("novalidate", "") }, focus: function () { if (this._focusedField = null, !0 === this.validationResult || "none" === this.options.focus) return null; for (var t = 0; t < this.fields.length; t++) { var e = this.fields[t]; if (!0 !== e.validationResult && e.validationResult.length > 0 && void 0 === e.options.noFocus && (this._focusedField = e.$element, "first" === this.options.focus)) break } return null === this._focusedField ? null : this._focusedField.focus() }, _destroyUI: function () { this.$element.off(".Parsley") } }, g.Field = { _reflowUI: function () { if (this._buildUI(), this._ui) { var t = function t(e, i, r) { for (var n = [], s = [], a = 0; a < e.length; a++) { for (var o = !1, l = 0; l < i.length; l++)if (e[a].assert.name === i[l].assert.name) { o = !0; break } o ? s.push(e[a]) : n.push(e[a]) } return { kept: s, added: n, removed: r ? [] : t(i, e, !0).added } }(this.validationResult, this._ui.lastValidationResult); this._ui.lastValidationResult = this.validationResult, this._manageStatusClass(), this._manageErrorsMessages(t), this._actualizeTriggers(), !t.kept.length && !t.added.length || this._failedOnce || (this._failedOnce = !0, this._actualizeTriggers()) } }, getErrorsMessages: function () { if (!0 === this.validationResult) return []; for (var t = [], e = 0; e < this.validationResult.length; e++)t.push(this.validationResult[e].errorMessage || this._getErrorMessage(this.validationResult[e].assert)); return t }, addError: function (t) { var e = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : {}, i = e.message, r = e.assert, n = e.updateClass, s = void 0 === n || n; this._buildUI(), this._addError(t, { message: i, assert: r }), s && this._errorClass() }, updateError: function (t) { var e = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : {}, i = e.message, r = e.assert, n = e.updateClass, s = void 0 === n || n; this._buildUI(), this._updateError(t, { message: i, assert: r }), s && this._errorClass() }, removeError: function (t) { var e = (arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : {}).updateClass, i = void 0 === e || e; this._buildUI(), this._removeError(t), i && this._manageStatusClass() }, _manageStatusClass: function () { this.hasConstraints() && this.needsValidation() && !0 === this.validationResult ? this._successClass() : this.validationResult.length > 0 ? this._errorClass() : this._resetClass() }, _manageErrorsMessages: function (e) { if (void 0 === this.options.errorsMessagesDisabled) { if (void 0 !== this.options.errorMessage) return e.added.length || e.kept.length ? (this._insertErrorWrapper(), 0 === this._ui.$errorsWrapper.find(".parsley-custom-error-message").length && this._ui.$errorsWrapper.append(t(this.options.errorTemplate).addClass("parsley-custom-error-message")), this._ui.$errorClassHandler.attr("aria-describedby", this._ui.errorsWrapperId), this._ui.$errorsWrapper.addClass("filled").attr("aria-hidden", "false").find(".parsley-custom-error-message").html(this.options.errorMessage)) : (this._ui.$errorClassHandler.removeAttr("aria-describedby"), this._ui.$errorsWrapper.removeClass("filled").attr("aria-hidden", "true").find(".parsley-custom-error-message").remove()); for (var i = 0; i < e.removed.length; i++)this._removeError(e.removed[i].assert.name); for (i = 0; i < e.added.length; i++)this._addError(e.added[i].assert.name, { message: e.added[i].errorMessage, assert: e.added[i].assert }); for (i = 0; i < e.kept.length; i++)this._updateError(e.kept[i].assert.name, { message: e.kept[i].errorMessage, assert: e.kept[i].assert }) } }, _addError: function (e, i) { var r = i.message, n = i.assert; this._insertErrorWrapper(), this._ui.$errorClassHandler.attr("aria-describedby", this._ui.errorsWrapperId), this._ui.$errorsWrapper.addClass("filled").attr("aria-hidden", "false").append(t(this.options.errorTemplate).addClass("parsley-" + e).html(r || this._getErrorMessage(n))) }, _updateError: function (t, e) { var i = e.message, r = e.assert; this._ui.$errorsWrapper.addClass("filled").find(".parsley-" + t).html(i || this._getErrorMessage(r)) }, _removeError: function (t) { this._ui.$errorClassHandler.removeAttr("aria-describedby"), this._ui.$errorsWrapper.removeClass("filled").attr("aria-hidden", "true").find(".parsley-" + t).remove() }, _getErrorMessage: function (t) { var e = t.name + "Message"; return void 0 !== this.options[e] ? window.Parsley.formatMessage(this.options[e], t.requirements) : window.Parsley.getErrorMessage(t) }, _buildUI: function () { if (!this._ui && !1 !== this.options.uiEnabled) { var e = {}; this.element.setAttribute(this.options.namespace + "id", this.__id__), e.$errorClassHandler = this._manageClassHandler(), e.errorsWrapperId = "parsley-id-" + (this.options.multiple ? "multiple-" + this.options.multiple : this.__id__), e.$errorsWrapper = t(this.options.errorsWrapper).attr("id", e.errorsWrapperId), e.lastValidationResult = [], e.validationInformationVisible = !1, this._ui = e } }, _manageClassHandler: function () { if ("string" == typeof this.options.classHandler && t(this.options.classHandler).length) return t(this.options.classHandler); var i = this.options.classHandler; if ("string" == typeof this.options.classHandler && "function" == typeof window[this.options.classHandler] && (i = window[this.options.classHandler]), "function" == typeof i) { var r = i.call(this, this); if (void 0 !== r && r.length) return r } else { if ("object" === e(i) && i instanceof jQuery && i.length) return i; i && o.warn("The class handler `" + i + "` does not exist in DOM nor as a global JS function") } return this._inputHolder() }, _inputHolder: function () { return this.options.multiple && "SELECT" !== this.element.nodeName ? this.$element.parent() : this.$element }, _insertErrorWrapper: function () { var i = this.options.errorsContainer; if (0 !== this._ui.$errorsWrapper.parent().length) return this._ui.$errorsWrapper.parent(); if ("string" == typeof i) { if (t(i).length) return t(i).append(this._ui.$errorsWrapper); "function" == typeof window[i] ? i = window[i] : o.warn("The errors container `" + i + "` does not exist in DOM nor as a global JS function") } return "function" == typeof i && (i = i.call(this, this)), "object" === e(i) && i.length ? i.append(this._ui.$errorsWrapper) : this._inputHolder().after(this._ui.$errorsWrapper) }, _actualizeTriggers: function () { var t, e = this, i = this._findRelated(); i.off(".Parsley"), this._failedOnce ? i.on(o.namespaceEvents(this.options.triggerAfterFailure, "Parsley"), function () { e._validateIfNeeded() }) : (t = o.namespaceEvents(this.options.trigger, "Parsley")) && i.on(t, function (t) { e._validateIfNeeded(t) }) }, _validateIfNeeded: function (t) { var e = this; t && /key|input/.test(t.type) && (!this._ui || !this._ui.validationInformationVisible) && this.getValue().length <= this.options.validationThreshold || (this.options.debounce ? (window.clearTimeout(this._debounced), this._debounced = window.setTimeout(function () { return e.validate() }, this.options.debounce)) : this.validate()) }, _resetUI: function () { this._failedOnce = !1, this._actualizeTriggers(), void 0 !== this._ui && (this._ui.$errorsWrapper.removeClass("filled").children().remove(), this._resetClass(), this._ui.lastValidationResult = [], this._ui.validationInformationVisible = !1) }, _destroyUI: function () { this._resetUI(), void 0 !== this._ui && this._ui.$errorsWrapper.remove(), delete this._ui }, _successClass: function () { this._ui.validationInformationVisible = !0, this._ui.$errorClassHandler.removeClass(this.options.errorClass).addClass(this.options.successClass) }, _errorClass: function () { this._ui.validationInformationVisible = !0, this._ui.$errorClassHandler.removeClass(this.options.successClass).addClass(this.options.errorClass) }, _resetClass: function () { this._ui.$errorClassHandler.removeClass(this.options.successClass).removeClass(this.options.errorClass) } }; var v = function (e, i, r) { this.__class__ = "Form", this.element = e, this.$element = t(e), this.domOptions = i, this.options = r, this.parent = window.Parsley, this.fields = [], this.validationResult = null }, y = { pending: null, resolved: !0, rejected: !1 }; v.prototype = { onSubmitValidate: function (t) { var e = this; if (!0 !== t.parsley) { var i = this._submitSource || this.$element.find(o._SubmitSelector)[0]; if (this._submitSource = null, this.$element.find(".parsley-synthetic-submit-button").prop("disabled", !0), !i || null === i.getAttribute("formnovalidate")) { window.Parsley._remoteCache = {}; var r = this.whenValidate({ event: t }); "resolved" === r.state() && !1 !== this._trigger("submit") || (t.stopImmediatePropagation(), t.preventDefault(), "pending" === r.state() && r.done(function () { e._submit(i) })) } } }, onSubmitButton: function (t) { this._submitSource = t.currentTarget }, _submit: function (e) { if (!1 !== this._trigger("submit")) { if (e) { var r = this.$element.find(".parsley-synthetic-submit-button").prop("disabled", !1); 0 === r.length && (r = t('<input class="parsley-synthetic-submit-button" type="hidden">').appendTo(this.$element)), r.attr({ name: e.getAttribute("name"), value: e.getAttribute("value") }) } this.$element.trigger(i(t.Event("submit"), { parsley: !0 })) } }, validate: function (e) { if (arguments.length >= 1 && !t.isPlainObject(e)) { o.warnOnce("Calling validate on a parsley form without passing arguments as an object is deprecated."); var i = Array.prototype.slice.call(arguments); e = { group: i[0], force: i[1], event: i[2] } } return y[this.whenValidate(e).state()] }, whenValidate: function () { var e, r = this, s = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : {}, a = s.group, l = s.force, u = s.event; this.submitEvent = u, u && (this.submitEvent = i({}, u, { preventDefault: function () { o.warnOnce("Using `this.submitEvent.preventDefault()` is deprecated; instead, call `this.validationResult = false`"), r.validationResult = !1 } })), this.validationResult = !0, this._trigger("validate"), this._refreshFields(); var d = this._withoutReactualizingFormOptions(function () { return t.map(r.fields, function (t) { return t.whenValidate({ force: l, group: a }) }) }); return (e = o.all(d).done(function () { r._trigger("success") }).fail(function () { r.validationResult = !1, r.focus(), r._trigger("error") }).always(function () { r._trigger("validated") })).pipe.apply(e, n(this._pipeAccordingToValidationResult())) }, isValid: function (e) { if (arguments.length >= 1 && !t.isPlainObject(e)) { o.warnOnce("Calling isValid on a parsley form without passing arguments as an object is deprecated."); var i = Array.prototype.slice.call(arguments); e = { group: i[0], force: i[1] } } return y[this.whenValid(e).state()] }, whenValid: function () { var e = this, i = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : {}, r = i.group, n = i.force; this._refreshFields(); var s = this._withoutReactualizingFormOptions(function () { return t.map(e.fields, function (t) { return t.whenValid({ group: r, force: n }) }) }); return o.all(s) }, refresh: function () { return this._refreshFields(), this }, reset: function () { for (var t = 0; t < this.fields.length; t++)this.fields[t].reset(); this._trigger("reset") }, destroy: function () { this._destroyUI(); for (var t = 0; t < this.fields.length; t++)this.fields[t].destroy(); this.$element.removeData("Parsley"), this._trigger("destroy") }, _refreshFields: function () { return this.actualizeOptions()._bindFields() }, _bindFields: function () { var e = this, i = this.fields; return this.fields = [], this.fieldsMappedById = {}, this._withoutReactualizingFormOptions(function () { e.$element.find(e.options.inputs).not(e.options.excluded).not("[".concat(e.options.namespace, "excluded=true]")).each(function (t, i) { var r = new window.Parsley.Factory(i, {}, e); if ("Field" === r.__class__ || "FieldMultiple" === r.__class__) { var n = r.__class__ + "-" + r.__id__; void 0 === e.fieldsMappedById[n] && (e.fieldsMappedById[n] = r, e.fields.push(r)) } }), t.each(o.difference(i, e.fields), function (t, e) { e.reset() }) }), this }, _withoutReactualizingFormOptions: function (t) { var e = this.actualizeOptions; this.actualizeOptions = function () { return this }; var i = t(); return this.actualizeOptions = e, i }, _trigger: function (t) { return this.trigger("form:" + t) } }; var _ = function (t, e, r, n, s) { var a = window.Parsley._validatorRegistry.validators[e], o = new d(a); i(this, { validator: o, name: e, requirements: r, priority: n = n || t.options[e + "Priority"] || o.priority, isDomConstraint: s = !0 === s }), this._parseRequirements(t.options) }; _.prototype = { validate: function (t, e) { var i; return (i = this.validator).validate.apply(i, [t].concat(n(this.requirementList), [e])) }, _parseRequirements: function (t) { var e = this; this.requirementList = this.validator.parseRequirements(this.requirements, function (i) { return t[e.name + (r = i, r[0].toUpperCase() + r.slice(1))]; var r }) } }; var b = function (e, i, r, n) { this.__class__ = "Field", this.element = e, this.$element = t(e), void 0 !== n && (this.parent = n), this.options = r, this.domOptions = i, this.constraints = [], this.constraintsByName = {}, this.validationResult = !0, this._bindConstraints() }, w = { pending: null, resolved: !0, rejected: !1 }; b.prototype = { validate: function (e) { arguments.length >= 1 && !t.isPlainObject(e) && (o.warnOnce("Calling validate on a parsley field without passing arguments as an object is deprecated."), e = { options: e }); var i = this.whenValidate(e); if (!i) return !0; switch (i.state()) { case "pending": return null; case "resolved": return !0; case "rejected": return this.validationResult } }, whenValidate: function () { var t, e = this, i = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : {}, r = i.force, s = i.group; if (this.refresh(), !s || this._isInGroup(s)) return this.value = this.getValue(), this._trigger("validate"), (t = this.whenValid({ force: r, value: this.value, _refreshed: !0 }).always(function () { e._reflowUI() }).done(function () { e._trigger("success") }).fail(function () { e._trigger("error") }).always(function () { e._trigger("validated") })).pipe.apply(t, n(this._pipeAccordingToValidationResult())) }, hasConstraints: function () { return 0 !== this.constraints.length }, needsValidation: function (t) { return void 0 === t && (t = this.getValue()), !(!t.length && !this._isRequired() && void 0 === this.options.validateIfEmpty) }, _isInGroup: function (e) { return Array.isArray(this.options.group) ? -1 !== t.inArray(e, this.options.group) : this.options.group === e }, isValid: function (e) { if (arguments.length >= 1 && !t.isPlainObject(e)) { o.warnOnce("Calling isValid on a parsley field without passing arguments as an object is deprecated."); var i = Array.prototype.slice.call(arguments); e = { force: i[0], value: i[1] } } var r = this.whenValid(e); return !r || w[r.state()] }, whenValid: function () { var e = this, i = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : {}, r = i.force, n = void 0 !== r && r, s = i.value, a = i.group; if (i._refreshed || this.refresh(), !a || this._isInGroup(a)) { if (this.validationResult = !0, !this.hasConstraints()) return t.when(); if (null == s && (s = this.getValue()), !this.needsValidation(s) && !0 !== n) return t.when(); var l = this._getGroupedConstraints(), u = []; return t.each(l, function (i, r) { var n = o.all(t.map(r, function (t) { return e._validateConstraint(s, t) })); if (u.push(n), "rejected" === n.state()) return !1 }), o.all(u) } }, _validateConstraint: function (e, i) { var r = this, n = i.validate(e, this); return !1 === n && (n = t.Deferred().reject()), o.all([n]).fail(function (t) { r.validationResult instanceof Array || (r.validationResult = []), r.validationResult.push({ assert: i, errorMessage: "string" == typeof t && t }) }) }, getValue: function () { var t; return null == (t = "function" == typeof this.options.value ? this.options.value(this) : void 0 !== this.options.value ? this.options.value : this.$element.val()) ? "" : this._handleWhitespace(t) }, reset: function () { return this._resetUI(), this._trigger("reset") }, destroy: function () { this._destroyUI(), this.$element.removeData("Parsley"), this.$element.removeData("FieldMultiple"), this._trigger("destroy") }, refresh: function () { return this._refreshConstraints(), this }, _refreshConstraints: function () { return this.actualizeOptions()._bindConstraints() }, refreshConstraints: function () { return o.warnOnce("Parsley's refreshConstraints is deprecated. Please use refresh"), this.refresh() }, addConstraint: function (t, e, i, r) { if (window.Parsley._validatorRegistry.validators[t]) { var n = new _(this, t, e, i, r); "undefined" !== this.constraintsByName[n.name] && this.removeConstraint(n.name), this.constraints.push(n), this.constraintsByName[n.name] = n } return this }, removeConstraint: function (t) { for (var e = 0; e < this.constraints.length; e++)if (t === this.constraints[e].name) { this.constraints.splice(e, 1); break } return delete this.constraintsByName[t], this }, updateConstraint: function (t, e, i) { return this.removeConstraint(t).addConstraint(t, e, i) }, _bindConstraints: function () { for (var t = [], e = {}, i = 0; i < this.constraints.length; i++)!1 === this.constraints[i].isDomConstraint && (t.push(this.constraints[i]), e[this.constraints[i].name] = this.constraints[i]); for (var r in this.constraints = t, this.constraintsByName = e, this.options) this.addConstraint(r, this.options[r], void 0, !0); return this._bindHtml5Constraints() }, _bindHtml5Constraints: function () { null !== this.element.getAttribute("required") && this.addConstraint("required", !0, void 0, !0), null !== this.element.getAttribute("pattern") && this.addConstraint("pattern", this.element.getAttribute("pattern"), void 0, !0); var t = this.element.getAttribute("min"), e = this.element.getAttribute("max"); null !== t && null !== e ? this.addConstraint("range", [t, e], void 0, !0) : null !== t ? this.addConstraint("min", t, void 0, !0) : null !== e && this.addConstraint("max", e, void 0, !0), null !== this.element.getAttribute("minlength") && null !== this.element.getAttribute("maxlength") ? this.addConstraint("length", [this.element.getAttribute("minlength"), this.element.getAttribute("maxlength")], void 0, !0) : null !== this.element.getAttribute("minlength") ? this.addConstraint("minlength", this.element.getAttribute("minlength"), void 0, !0) : null !== this.element.getAttribute("maxlength") && this.addConstraint("maxlength", this.element.getAttribute("maxlength"), void 0, !0); var i = o.getType(this.element); return "number" === i ? this.addConstraint("type", ["number", { step: this.element.getAttribute("step") || "1", base: t || this.element.getAttribute("value") }], void 0, !0) : /^(email|url|range|date)$/i.test(i) ? this.addConstraint("type", i, void 0, !0) : this }, _isRequired: function () { return void 0 !== this.constraintsByName.required && !1 !== this.constraintsByName.required.requirements }, _trigger: function (t) { return this.trigger("field:" + t) }, _handleWhitespace: function (t) { return !0 === this.options.trimValue && o.warnOnce('data-parsley-trim-value="true" is deprecated, please use data-parsley-whitespace="trim"'), "squish" === this.options.whitespace && (t = t.replace(/\s{2,}/g, " ")), "trim" !== this.options.whitespace && "squish" !== this.options.whitespace && !0 !== this.options.trimValue || (t = o.trimString(t)), t }, _isDateInput: function () { var t = this.constraintsByName.type; return t && "date" === t.requirements }, _getGroupedConstraints: function () { if (!1 === this.options.priorityEnabled) return [this.constraints]; for (var t = [], e = {}, i = 0; i < this.constraints.length; i++) { var r = this.constraints[i].priority; e[r] || t.push(e[r] = []), e[r].push(this.constraints[i]) } return t.sort(function (t, e) { return e[0].priority - t[0].priority }), t } }; var F = function () { this.__class__ = "FieldMultiple" }; F.prototype = { addElement: function (t) { return this.$elements.push(t), this }, _refreshConstraints: function () { var e; if (this.constraints = [], "SELECT" === this.element.nodeName) return this.actualizeOptions()._bindConstraints(), this; for (var i = 0; i < this.$elements.length; i++)if (t("html").has(this.$elements[i]).length) { e = this.$elements[i].data("FieldMultiple")._refreshConstraints().constraints; for (var r = 0; r < e.length; r++)this.addConstraint(e[r].name, e[r].requirements, e[r].priority, e[r].isDomConstraint) } else this.$elements.splice(i, 1); return this }, getValue: function () { if ("function" == typeof this.options.value) return this.options.value(this); if (void 0 !== this.options.value) return this.options.value; if ("INPUT" === this.element.nodeName) { var e = o.getType(this.element); if ("radio" === e) return this._findRelated().filter(":checked").val() || ""; if ("checkbox" === e) { var i = []; return this._findRelated().filter(":checked").each(function () { i.push(t(this).val()) }), i } } return "SELECT" === this.element.nodeName && null === this.$element.val() ? [] : this.$element.val() }, _init: function () { return this.$elements = [this.$element], this } }; var C = function (r, n, s) { this.element = r, this.$element = t(r); var a = this.$element.data("Parsley"); if (a) return void 0 !== s && a.parent === window.Parsley && (a.parent = s, a._resetOptions(a.options)), "object" === e(n) && i(a.options, n), a; if (!this.$element.length) throw new Error("You must bind Parsley on an existing element."); if (void 0 !== s && "Form" !== s.__class__) throw new Error("Parent instance must be a Form instance"); return this.parent = s || window.Parsley, this.init(n) }; C.prototype = { init: function (t) { return this.__class__ = "Parsley", this.__version__ = "2.9.2", this.__id__ = o.generateID(), this._resetOptions(t), "FORM" === this.element.nodeName || o.checkAttr(this.element, this.options.namespace, "validate") && !this.$element.is(this.options.inputs) ? this.bind("parsleyForm") : this.isMultiple() ? this.handleMultiple() : this.bind("parsleyField") }, isMultiple: function () { var t = o.getType(this.element); return "radio" === t || "checkbox" === t || "SELECT" === this.element.nodeName && null !== this.element.getAttribute("multiple") }, handleMultiple: function () { var e, i, r = this; if (this.options.multiple = this.options.multiple || (e = this.element.getAttribute("name")) || this.element.getAttribute("id"), "SELECT" === this.element.nodeName && null !== this.element.getAttribute("multiple")) return this.options.multiple = this.options.multiple || this.__id__, this.bind("parsleyFieldMultiple"); if (!this.options.multiple) return o.warn("To be bound by Parsley, a radio, a checkbox and a multiple select input must have either a name or a multiple option.", this.$element), this; this.options.multiple = this.options.multiple.replace(/(:|\.|\[|\]|\{|\}|\$)/g, ""), e && t('input[name="' + e + '"]').each(function (t, e) { var i = o.getType(e); "radio" !== i && "checkbox" !== i || e.setAttribute(r.options.namespace + "multiple", r.options.multiple) }); for (var n = this._findRelated(), s = 0; s < n.length; s++)if (void 0 !== (i = t(n.get(s)).data("Parsley"))) { this.$element.data("FieldMultiple") || i.addElement(this.$element); break } return this.bind("parsleyField", !0), i || this.bind("parsleyFieldMultiple") }, bind: function (e, i) { var r; switch (e) { case "parsleyForm": r = t.extend(new v(this.element, this.domOptions, this.options), new u, window.ParsleyExtend)._bindFields(); break; case "parsleyField": r = t.extend(new b(this.element, this.domOptions, this.options, this.parent), new u, window.ParsleyExtend); break; case "parsleyFieldMultiple": r = t.extend(new b(this.element, this.domOptions, this.options, this.parent), new F, new u, window.ParsleyExtend)._init(); break; default: throw new Error(e + "is not a supported Parsley type") }return this.options.multiple && o.setAttr(this.element, this.options.namespace, "multiple", this.options.multiple), void 0 !== i ? (this.$element.data("FieldMultiple", r), r) : (this.$element.data("Parsley", r), r._actualizeTriggers(), r._trigger("init"), r) } }; var A = t.fn.jquery.split("."); if (parseInt(A[0]) <= 1 && parseInt(A[1]) < 8) throw "The loaded version of jQuery is too old. Please upgrade to 1.8.x or better."; A.forEach || o.warn("Parsley requires ES5 to run properly. Please include https://github.com/es-shims/es5-shim"); var E = i(new u, { element: document, $element: t(document), actualizeOptions: null, _resetOptions: null, Factory: C, version: "2.9.2" }); i(b.prototype, g.Field, u.prototype), i(v.prototype, g.Form, u.prototype), i(C.prototype, u.prototype), t.fn.parsley = t.fn.psly = function (e) { if (this.length > 1) { var i = []; return this.each(function () { i.push(t(this).parsley(e)) }), i } if (0 != this.length) return new C(this[0], e) }, void 0 === window.ParsleyExtend && (window.ParsleyExtend = {}), E.options = i(o.objectCreate(l), window.ParsleyConfig), window.ParsleyConfig = E.options, window.Parsley = window.psly = E, E.Utils = o, window.ParsleyUtils = {}, t.each(o, function (t, e) { "function" == typeof e && (window.ParsleyUtils[t] = function () { return o.warnOnce("Accessing `window.ParsleyUtils` is deprecated. Use `window.Parsley.Utils` instead."), o[t].apply(o, arguments) }) }); var x = window.Parsley._validatorRegistry = new h(window.ParsleyConfig.validators, window.ParsleyConfig.i18n); window.ParsleyValidator = {}, t.each("setLocale addCatalog addMessage addMessages getErrorMessage formatMessage addValidator updateValidator removeValidator hasValidator".split(" "), function (t, e) { window.Parsley[e] = function () { return x[e].apply(x, arguments) }, window.ParsleyValidator[e] = function () { var t; return o.warnOnce("Accessing the method '".concat(e, "' through Validator is deprecated. Simply call 'window.Parsley.").concat(e, "(...)'")), (t = window.Parsley)[e].apply(t, arguments) } }), window.Parsley.UI = g, window.ParsleyUI = { removeError: function (t, e, i) { var r = !0 !== i; return o.warnOnce("Accessing UI is deprecated. Call 'removeError' on the instance directly. Please comment in issue 1073 as to your need to call this method."), t.removeError(e, { updateClass: r }) }, getErrorsMessages: function (t) { return o.warnOnce("Accessing UI is deprecated. Call 'getErrorsMessages' on the instance directly."), t.getErrorsMessages() } }, t.each("addError updateError".split(" "), function (t, e) { window.ParsleyUI[e] = function (t, i, r, n, s) { var a = !0 !== s; return o.warnOnce("Accessing UI is deprecated. Call '".concat(e, "' on the instance directly. Please comment in issue 1073 as to your need to call this method.")), t[e](i, { message: r, assert: n, updateClass: a }) } }), !1 !== window.ParsleyConfig.autoBind && t(function () { t("[data-parsley-validate]").length && t("[data-parsley-validate]").parsley() }); var $ = t({}), V = function () { o.warnOnce("Parsley's pubsub module is deprecated; use the 'on' and 'off' methods on parsley instances or window.Parsley") }; function P(t, e) { return t.parsleyAdaptedCallback || (t.parsleyAdaptedCallback = function () { var i = Array.prototype.slice.call(arguments, 0); i.unshift(this), t.apply(e || $, i) }), t.parsleyAdaptedCallback } var O = "parsley:"; function T(t) { return 0 === t.lastIndexOf(O, 0) ? t.substr(O.length) : t } return t.listen = function (t, i) { var r; if (V(), "object" === e(arguments[1]) && "function" == typeof arguments[2] && (r = arguments[1], i = arguments[2]), "function" != typeof i) throw new Error("Wrong parameters"); window.Parsley.on(T(t), P(i, r)) }, t.listenTo = function (t, e, i) { if (V(), !(t instanceof b || t instanceof v)) throw new Error("Must give Parsley instance"); if ("string" != typeof e || "function" != typeof i) throw new Error("Wrong parameters"); t.on(T(e), P(i)) }, t.unsubscribe = function (t, e) { if (V(), "string" != typeof t || "function" != typeof e) throw new Error("Wrong arguments"); window.Parsley.off(T(t), e.parsleyAdaptedCallback) }, t.unsubscribeTo = function (t, e) { if (V(), !(t instanceof b || t instanceof v)) throw new Error("Must give Parsley instance"); t.off(T(e)) }, t.unsubscribeAll = function (e) { V(), window.Parsley.off(T(e)), t("form,input,textarea,select").each(function () { var i = t(this).data("Parsley"); i && i.off(T(e)) }) }, t.emit = function (t, e) { var i; V(); var r = e instanceof b || e instanceof v, s = Array.prototype.slice.call(arguments, r ? 2 : 1); s.unshift(T(t)), r || (e = window.Parsley), (i = e).trigger.apply(i, n(s)) }, t.extend(!0, E, { asyncValidators: { default: { fn: function (t) { return t.status >= 200 && t.status < 300 }, url: !1 }, reverse: { fn: function (t) { return t.status < 200 || t.status >= 300 }, url: !1 } }, addAsyncValidator: function (t, e, i, r) { return E.asyncValidators[t] = { fn: e, url: i || !1, options: r || {} }, this } }), E.addValidator("remote", { requirementType: { "": "string", validator: "string", reverse: "boolean", options: "object" }, validateString: function (e, i, r, n) { var s, a, o = {}, l = r.validator || (!0 === r.reverse ? "reverse" : "default"); if (void 0 === E.asyncValidators[l]) throw new Error("Calling an undefined async validator: `" + l + "`"); (i = E.asyncValidators[l].url || i).indexOf("{value}") > -1 ? i = i.replace("{value}", encodeURIComponent(e)) : o[n.element.getAttribute("name") || n.element.getAttribute("id")] = e; var u = t.extend(!0, r.options || {}, E.asyncValidators[l].options); s = t.extend(!0, {}, { url: i, data: o, type: "GET" }, u), n.trigger("field:ajaxoptions", n, s), a = t.param(s), void 0 === E._remoteCache && (E._remoteCache = {}); var d = E._remoteCache[a] = E._remoteCache[a] || t.ajax(s), h = function () { var e = E.asyncValidators[l].fn.call(n, d, i, r); return e || (e = t.Deferred().reject()), t.when(e) }; return d.then(h, h) }, priority: -1 }), E.on("form:submit", function () { E._remoteCache = {} }), u.prototype.addAsyncValidator = function () { return o.warnOnce("Accessing the method `addAsyncValidator` through an instance is deprecated. Simply call `Parsley.addAsyncValidator(...)`"), E.addAsyncValidator.apply(E, arguments) }, E.addMessages("en", { defaultMessage: "This value seems to be invalid.", type: { email: "This value should be a valid email.", url: "This value should be a valid url.", number: "This value should be a valid number.", integer: "This value should be a valid integer.", digits: "This value should be digits.", alphanum: "This value should be alphanumeric." }, notblank: "This value should not be blank.", required: "This value is required.", pattern: "This value seems to be invalid.", min: "This value should be greater than or equal to %s.", max: "This value should be lower than or equal to %s.", range: "This value should be between %s and %s.", minlength: "This value is too short. It should have %s characters or more.", maxlength: "This value is too long. It should have %s characters or fewer.", length: "This value length is invalid. It should be between %s and %s characters long.", mincheck: "You must select at least %s choices.", maxcheck: "You must select %s choices or fewer.", check: "You must select between %s and %s choices.", equalto: "This value should be the same.", euvatin: "It's not a valid VAT Identification Number." }), E.setLocale("en"), (new function () { var e = this, r = window || global; i(this, { isNativeEvent: function (t) { return t.originalEvent && !1 !== t.originalEvent.isTrusted }, fakeInputEvent: function (i) { e.isNativeEvent(i) && t(i.target).trigger("input") }, misbehaves: function (i) { e.isNativeEvent(i) && (e.behavesOk(i), t(document).on("change.inputevent", i.data.selector, e.fakeInputEvent), e.fakeInputEvent(i)) }, behavesOk: function (i) { e.isNativeEvent(i) && t(document).off("input.inputevent", i.data.selector, e.behavesOk).off("change.inputevent", i.data.selector, e.misbehaves) }, install: function () { if (!r.inputEventPatched) { r.inputEventPatched = "0.0.3"; for (var i = 0, n = ["select", 'input[type="checkbox"]', 'input[type="radio"]', 'input[type="file"]']; i < n.length; i++) { var s = n[i]; t(document).on("input.inputevent", s, { selector: s }, e.behavesOk).on("change.inputevent", s, { selector: s }, e.misbehaves) } } }, uninstall: function () { delete r.inputEventPatched, t(document).off(".inputevent") } }) }).install(), E }); "undefined" != typeof document && function (e, t) { var n = e.createElement("style"); n.setAttribute("id", "dh-parsley"); if (e.getElementsByTagName("head")[0].appendChild(n), n.styleSheet) n.styleSheet.disabled || (n.styleSheet.cssText = t); else try { n.innerHTML = t } catch (e) { n.innerText = t } }(document, "input.parsley-success,select.parsley-success,textarea.parsley-success{color:#468847;background-color:#dff0d8;border:1px solid #d6e9c6}input.parsley-error,select.parsley-error,textarea.parsley-error{color:#b94a48;background-color:#f2dede;border:1px solid #eed3d7}.parsley-errors-list{margin:2px 0 3px;padding:0;list-style-type:none;font-size:.9em;line-height:.9em;opacity:0;color:#b94a48;transition:.3s ease-in;-o-transition:.3s ease-in;-moz-transition:.3s ease-in;-webkit-transition:.3s ease-in}.parsley-errors-list.filled{opacity:1}");

// ============================jquery-confirm.js===================
(function (factory) { if (typeof define === "function" && define.amd) { define(["jquery"], factory); } else { if (typeof module === "object" && module.exports) { module.exports = function (root, jQuery) { if (jQuery === undefined) { if (typeof window !== "undefined") { jQuery = require("jquery"); } else { jQuery = require("jquery")(root); } } factory(jQuery); return jQuery; }; } else { factory(jQuery); } } }(function ($) { var w = window; $.fn.confirm = function (options, option2) { if (typeof options === "undefined") { options = {}; } if (typeof options === "string") { options = { content: options, title: (option2) ? option2 : false }; } $(this).each(function () { var $this = $(this); if ($this.attr("jc-attached")) { console.warn("jConfirm has already been attached to this element ", $this[0]); return; } $this.on("click", function (e) { e.preventDefault(); var jcOption = $.extend({}, options); if ($this.attr("data-title")) { jcOption.title = $this.attr("data-title"); } if ($this.attr("data-content")) { jcOption.content = $this.attr("data-content"); } if (typeof jcOption.buttons === "undefined") { jcOption.buttons = {}; } jcOption["$target"] = $this; if ($this.attr("href") && Object.keys(jcOption.buttons).length === 0) { var buttons = $.extend(true, {}, w.jconfirm.pluginDefaults.defaultButtons, (w.jconfirm.defaults || {}).defaultButtons || {}); var firstBtn = Object.keys(buttons)[0]; jcOption.buttons = buttons; jcOption.buttons[firstBtn].action = function () { location.href = $this.attr("href"); }; } jcOption.closeIcon = false; var instance = $.confirm(jcOption); }); $this.attr("jc-attached", true); }); return $(this); }; $.confirm = function (options, option2) { if (typeof options === "undefined") { options = {}; } if (typeof options === "string") { options = { content: options, title: (option2) ? option2 : false }; } var putDefaultButtons = !(options.buttons === false); if (typeof options.buttons !== "object") { options.buttons = {}; } if (Object.keys(options.buttons).length === 0 && putDefaultButtons) { var buttons = $.extend(true, {}, w.jconfirm.pluginDefaults.defaultButtons, (w.jconfirm.defaults || {}).defaultButtons || {}); options.buttons = buttons; } return w.jconfirm(options); }; $.alert = function (options, option2) { if (typeof options === "undefined") { options = {}; } if (typeof options === "string") { options = { content: options, title: (option2) ? option2 : false }; } var putDefaultButtons = !(options.buttons === false); if (typeof options.buttons !== "object") { options.buttons = {}; } if (Object.keys(options.buttons).length === 0 && putDefaultButtons) { var buttons = $.extend(true, {}, w.jconfirm.pluginDefaults.defaultButtons, (w.jconfirm.defaults || {}).defaultButtons || {}); var firstBtn = Object.keys(buttons)[0]; options.buttons[firstBtn] = buttons[firstBtn]; } return w.jconfirm(options); }; $.dialog = function (options, option2) { if (typeof options === "undefined") { options = {}; } if (typeof options === "string") { options = { content: options, title: (option2) ? option2 : false, closeIcon: function () { } }; } options.buttons = {}; if (typeof options.closeIcon === "undefined") { options.closeIcon = function () { }; } options.confirmKeys = [13]; return w.jconfirm(options); }; w.jconfirm = function (options) { if (typeof options === "undefined") { options = {}; } var pluginOptions = $.extend(true, {}, w.jconfirm.pluginDefaults); if (w.jconfirm.defaults) { pluginOptions = $.extend(true, pluginOptions, w.jconfirm.defaults); } pluginOptions = $.extend(true, {}, pluginOptions, options); var instance = new w.Jconfirm(pluginOptions); w.jconfirm.instances.push(instance); return instance; }; w.Jconfirm = function (options) { $.extend(this, options); this._init(); }; w.Jconfirm.prototype = { _init: function () { var that = this; if (!w.jconfirm.instances.length) { w.jconfirm.lastFocused = $("body").find(":focus"); } this._id = Math.round(Math.random() * 99999); this.contentParsed = $(document.createElement("div")); if (!this.lazyOpen) { setTimeout(function () { that.open(); }, 0); } }, _buildHTML: function () { var that = this; this._parseAnimation(this.animation, "o"); this._parseAnimation(this.closeAnimation, "c"); this._parseBgDismissAnimation(this.backgroundDismissAnimation); this._parseColumnClass(this.columnClass); this._parseTheme(this.theme); this._parseType(this.type); var template = $(this.template); template.find(".jconfirm-box").addClass(this.animationParsed).addClass(this.backgroundDismissAnimationParsed).addClass(this.typeParsed); if (this.typeAnimated) { template.find(".jconfirm-box").addClass("jconfirm-type-animated"); } if (this.useBootstrap) { template.find(".jc-bs3-row").addClass(this.bootstrapClasses.row); template.find(".jc-bs3-row").addClass("justify-content-md-center justify-content-sm-center justify-content-xs-center justify-content-lg-center"); template.find(".jconfirm-box-container").addClass(this.columnClassParsed); if (this.containerFluid) { template.find(".jc-bs3-container").addClass(this.bootstrapClasses.containerFluid); } else { template.find(".jc-bs3-container").addClass(this.bootstrapClasses.container); } } else { template.find(".jconfirm-box").css("width", this.boxWidth); } if (this.titleClass) { template.find(".jconfirm-title-c").addClass(this.titleClass); } template.addClass(this.themeParsed); var ariaLabel = "jconfirm-box" + this._id; template.find(".jconfirm-box").attr("aria-labelledby", ariaLabel).attr("tabindex", -1); template.find(".jconfirm-content").attr("id", ariaLabel); if (this.bgOpacity !== null) { template.find(".jconfirm-bg").css("opacity", this.bgOpacity); } if (this.rtl) { template.addClass("jconfirm-rtl"); } this.$el = template.appendTo(this.container); this.$jconfirmBoxContainer = this.$el.find(".jconfirm-box-container"); this.$jconfirmBox = this.$body = this.$el.find(".jconfirm-box"); this.$jconfirmBg = this.$el.find(".jconfirm-bg"); this.$title = this.$el.find(".jconfirm-title"); this.$titleContainer = this.$el.find(".jconfirm-title-c"); this.$content = this.$el.find("div.jconfirm-content"); this.$contentPane = this.$el.find(".jconfirm-content-pane"); this.$icon = this.$el.find(".jconfirm-icon-c"); this.$closeIcon = this.$el.find(".jconfirm-closeIcon"); this.$holder = this.$el.find(".jconfirm-holder"); this.$btnc = this.$el.find(".jconfirm-buttons"); this.$scrollPane = this.$el.find(".jconfirm-scrollpane"); that.setStartingPoint(); this._contentReady = $.Deferred(); this._modalReady = $.Deferred(); this.$holder.css({ "padding-top": this.offsetTop, "padding-bottom": this.offsetBottom, }); this.setTitle(); this.setIcon(); this._setButtons(); this._parseContent(); this.initDraggable(); if (this.isAjax) { this.showLoading(false); } $.when(this._contentReady, this._modalReady).then(function () { if (that.isAjaxLoading) { setTimeout(function () { that.isAjaxLoading = false; that.setContent(); that.setTitle(); that.setIcon(); setTimeout(function () { that.hideLoading(false); that._updateContentMaxHeight(); }, 100); if (typeof that.onContentReady === "function") { that.onContentReady(); } }, 50); } else { that._updateContentMaxHeight(); that.setTitle(); that.setIcon(); if (typeof that.onContentReady === "function") { that.onContentReady(); } } if (that.autoClose) { that._startCountDown(); } }).then(function () { that._watchContent(); }); if (this.animation === "none") { this.animationSpeed = 1; this.animationBounce = 1; } this.$body.css(this._getCSS(this.animationSpeed, this.animationBounce)); this.$contentPane.css(this._getCSS(this.animationSpeed, 1)); this.$jconfirmBg.css(this._getCSS(this.animationSpeed, 1)); this.$jconfirmBoxContainer.css(this._getCSS(this.animationSpeed, 1)); }, _typePrefix: "jconfirm-type-", typeParsed: "", _parseType: function (type) { this.typeParsed = this._typePrefix + type; }, setType: function (type) { var oldClass = this.typeParsed; this._parseType(type); this.$jconfirmBox.removeClass(oldClass).addClass(this.typeParsed); }, themeParsed: "", _themePrefix: "jconfirm-", setTheme: function (theme) { var previous = this.theme; this.theme = theme || this.theme; this._parseTheme(this.theme); if (previous) { this.$el.removeClass(previous); } this.$el.addClass(this.themeParsed); this.theme = theme; }, _parseTheme: function (theme) { var that = this; theme = theme.split(","); $.each(theme, function (k, a) { if (a.indexOf(that._themePrefix) === -1) { theme[k] = that._themePrefix + $.trim(a); } }); this.themeParsed = theme.join(" ").toLowerCase(); }, backgroundDismissAnimationParsed: "", _bgDismissPrefix: "jconfirm-hilight-", _parseBgDismissAnimation: function (bgDismissAnimation) { var animation = bgDismissAnimation.split(","); var that = this; $.each(animation, function (k, a) { if (a.indexOf(that._bgDismissPrefix) === -1) { animation[k] = that._bgDismissPrefix + $.trim(a); } }); this.backgroundDismissAnimationParsed = animation.join(" ").toLowerCase(); }, animationParsed: "", closeAnimationParsed: "", _animationPrefix: "jconfirm-animation-", setAnimation: function (animation) { this.animation = animation || this.animation; this._parseAnimation(this.animation, "o"); }, _parseAnimation: function (animation, which) { which = which || "o"; var animations = animation.split(","); var that = this; $.each(animations, function (k, a) { if (a.indexOf(that._animationPrefix) === -1) { animations[k] = that._animationPrefix + $.trim(a); } }); var a_string = animations.join(" ").toLowerCase(); if (which === "o") { this.animationParsed = a_string; } else { this.closeAnimationParsed = a_string; } return a_string; }, setCloseAnimation: function (closeAnimation) { this.closeAnimation = closeAnimation || this.closeAnimation; this._parseAnimation(this.closeAnimation, "c"); }, setAnimationSpeed: function (speed) { this.animationSpeed = speed || this.animationSpeed; }, columnClassParsed: "", setColumnClass: function (colClass) { if (!this.useBootstrap) { console.warn("cannot set columnClass, useBootstrap is set to false"); return; } this.columnClass = colClass || this.columnClass; this._parseColumnClass(this.columnClass); this.$jconfirmBoxContainer.addClass(this.columnClassParsed); }, _updateContentMaxHeight: function () { var height = $(window).height() - (this.$jconfirmBox.outerHeight() - this.$contentPane.outerHeight()) - (this.offsetTop + this.offsetBottom); this.$contentPane.css({ "max-height": height + "px" }); }, setBoxWidth: function (width) { if (this.useBootstrap) { console.warn("cannot set boxWidth, useBootstrap is set to true"); return; } this.boxWidth = width; this.$jconfirmBox.css("width", width); }, _parseColumnClass: function (colClass) { colClass = colClass.toLowerCase(); var p; switch (colClass) { case "xl": case "xlarge": p = "col-md-12"; break; case "l": case "large": p = "col-md-8 col-md-offset-2"; break; case "m": case "medium": p = "col-md-6 col-md-offset-3"; break; case "s": case "small": p = "col-md-4 col-md-offset-4"; break; case "xs": case "xsmall": p = "col-md-2 col-md-offset-5"; break; default: p = colClass; }this.columnClassParsed = p; }, initDraggable: function () { var that = this; var $t = this.$titleContainer; this.resetDrag(); if (this.draggable) { $t.on("mousedown", function (e) { $t.addClass("jconfirm-hand"); that.mouseX = e.clientX; that.mouseY = e.clientY; that.isDrag = true; }); $(window).on("mousemove." + this._id, function (e) { if (that.isDrag) { that.movingX = e.clientX - that.mouseX + that.initialX; that.movingY = e.clientY - that.mouseY + that.initialY; that.setDrag(); } }); $(window).on("mouseup." + this._id, function () { $t.removeClass("jconfirm-hand"); if (that.isDrag) { that.isDrag = false; that.initialX = that.movingX; that.initialY = that.movingY; } }); } }, resetDrag: function () { this.isDrag = false; this.initialX = 0; this.initialY = 0; this.movingX = 0; this.movingY = 0; this.mouseX = 0; this.mouseY = 0; this.$jconfirmBoxContainer.css("transform", "translate(" + 0 + "px, " + 0 + "px)"); }, setDrag: function () { if (!this.draggable) { return; } this.alignMiddle = false; var boxWidth = this.$jconfirmBox.outerWidth(); var boxHeight = this.$jconfirmBox.outerHeight(); var windowWidth = $(window).width(); var windowHeight = $(window).height(); var that = this; var dragUpdate = 1; if (that.movingX % dragUpdate === 0 || that.movingY % dragUpdate === 0) { if (that.dragWindowBorder) { var leftDistance = (windowWidth / 2) - boxWidth / 2; var topDistance = (windowHeight / 2) - boxHeight / 2; topDistance -= that.dragWindowGap; leftDistance -= that.dragWindowGap; if (leftDistance + that.movingX < 0) { that.movingX = -leftDistance; } else { if (leftDistance - that.movingX < 0) { that.movingX = leftDistance; } } if (topDistance + that.movingY < 0) { that.movingY = -topDistance; } else { if (topDistance - that.movingY < 0) { that.movingY = topDistance; } } } that.$jconfirmBoxContainer.css("transform", "translate(" + that.movingX + "px, " + that.movingY + "px)"); } }, _scrollTop: function () { if (typeof pageYOffset !== "undefined") { return pageYOffset; } else { var B = document.body; var D = document.documentElement; D = (D.clientHeight) ? D : B; return D.scrollTop; } }, _watchContent: function () { var that = this; if (this._timer) { clearInterval(this._timer); } var prevContentHeight = 0; this._timer = setInterval(function () { if (that.smoothContent) { var contentHeight = that.$content.outerHeight() || 0; if (contentHeight !== prevContentHeight) { prevContentHeight = contentHeight; } var wh = $(window).height(); var total = that.offsetTop + that.offsetBottom + that.$jconfirmBox.height() - that.$contentPane.height() + that.$content.height(); if (total < wh) { that.$contentPane.addClass("no-scroll"); } else { that.$contentPane.removeClass("no-scroll"); } } }, this.watchInterval); }, _overflowClass: "jconfirm-overflow", _hilightAnimating: false, highlight: function () { this.hiLightModal(); }, hiLightModal: function () { var that = this; if (this._hilightAnimating) { return; } that.$body.addClass("hilight"); var duration = parseFloat(that.$body.css("animation-duration")) || 2; this._hilightAnimating = true; setTimeout(function () { that._hilightAnimating = false; that.$body.removeClass("hilight"); }, duration * 1000); }, _bindEvents: function () { var that = this; this.boxClicked = false; this.$scrollPane.click(function (e) { if (!that.boxClicked) { var buttonName = false; var shouldClose = false; var str; if (typeof that.backgroundDismiss === "function") { str = that.backgroundDismiss(); } else { str = that.backgroundDismiss; } if (typeof str === "string" && typeof that.buttons[str] !== "undefined") { buttonName = str; shouldClose = false; } else { if (typeof str === "undefined" || !!(str) === true) { shouldClose = true; } else { shouldClose = false; } } if (buttonName) { var btnResponse = that.buttons[buttonName].action.apply(that); shouldClose = (typeof btnResponse === "undefined") || !!(btnResponse); } if (shouldClose) { that.close(); } else { that.hiLightModal(); } } that.boxClicked = false; }); this.$jconfirmBox.click(function (e) { that.boxClicked = true; }); var isKeyDown = false; $(window).on("jcKeyDown." + that._id, function (e) { if (!isKeyDown) { isKeyDown = true; } }); $(window).on("keyup." + that._id, function (e) { if (isKeyDown) { that.reactOnKey(e); isKeyDown = false; } }); $(window).on("resize." + this._id, function () { that._updateContentMaxHeight(); setTimeout(function () { that.resetDrag(); }, 100); }); }, _cubic_bezier: "0.36, 0.55, 0.19", _getCSS: function (speed, bounce) { return { "-webkit-transition-duration": speed / 1000 + "s", "transition-duration": speed / 1000 + "s", "-webkit-transition-timing-function": "cubic-bezier(" + this._cubic_bezier + ", " + bounce + ")", "transition-timing-function": "cubic-bezier(" + this._cubic_bezier + ", " + bounce + ")" }; }, _setButtons: function () { var that = this; var total_buttons = 0; if (typeof this.buttons !== "object") { this.buttons = {}; } $.each(this.buttons, function (key, button) { total_buttons += 1; if (typeof button === "function") { that.buttons[key] = button = { action: button }; } that.buttons[key].text = button.text || key; that.buttons[key].btnClass = button.btnClass || "btn-default"; that.buttons[key].action = button.action || function () { }; that.buttons[key].keys = button.keys || []; that.buttons[key].isHidden = button.isHidden || false; that.buttons[key].isDisabled = button.isDisabled || false; $.each(that.buttons[key].keys, function (i, a) { that.buttons[key].keys[i] = a.toLowerCase(); }); var button_element = $('<button type="button" class="btn"></button>').html(that.buttons[key].text).addClass(that.buttons[key].btnClass).prop("disabled", that.buttons[key].isDisabled).css("display", that.buttons[key].isHidden ? "none" : "").click(function (e) { e.preventDefault(); var res = that.buttons[key].action.apply(that, [that.buttons[key]]); that.onAction.apply(that, [key, that.buttons[key]]); that._stopCountDown(); if (typeof res === "undefined" || res) { that.close(); } }); that.buttons[key].el = button_element; that.buttons[key].setText = function (text) { button_element.html(text); }; that.buttons[key].addClass = function (className) { button_element.addClass(className); }; that.buttons[key].removeClass = function (className) { button_element.removeClass(className); }; that.buttons[key].disable = function () { that.buttons[key].isDisabled = true; button_element.prop("disabled", true); }; that.buttons[key].enable = function () { that.buttons[key].isDisabled = false; button_element.prop("disabled", false); }; that.buttons[key].show = function () { that.buttons[key].isHidden = false; button_element.css("display", ""); }; that.buttons[key].hide = function () { that.buttons[key].isHidden = true; button_element.css("display", "none"); }; that["$_" + key] = that["$$" + key] = button_element; that.$btnc.append(button_element); }); if (total_buttons === 0) { this.$btnc.hide(); } if (this.closeIcon === null && total_buttons === 0) { this.closeIcon = true; } if (this.closeIcon) { if (this.closeIconClass) { var closeHtml = '<i class="' + this.closeIconClass + '"></i>'; this.$closeIcon.html(closeHtml); } this.$closeIcon.click(function (e) { e.preventDefault(); var buttonName = false; var shouldClose = false; var str; if (typeof that.closeIcon === "function") { str = that.closeIcon(); } else { str = that.closeIcon; } if (typeof str === "string" && typeof that.buttons[str] !== "undefined") { buttonName = str; shouldClose = false; } else { if (typeof str === "undefined" || !!(str) === true) { shouldClose = true; } else { shouldClose = false; } } if (buttonName) { var btnResponse = that.buttons[buttonName].action.apply(that); shouldClose = (typeof btnResponse === "undefined") || !!(btnResponse); } if (shouldClose) { that.close(); } }); this.$closeIcon.show(); } else { this.$closeIcon.hide(); } }, setTitle: function (string, force) { force = force || false; if (typeof string !== "undefined") { if (typeof string === "string") { this.title = string; } else { if (typeof string === "function") { if (typeof string.promise === "function") { console.error("Promise was returned from title function, this is not supported."); } var response = string(); if (typeof response === "string") { this.title = response; } else { this.title = false; } } else { this.title = false; } } } if (this.isAjaxLoading && !force) { return; } this.$title.html(this.title || ""); this.updateTitleContainer(); }, setIcon: function (iconClass, force) { force = force || false; if (typeof iconClass !== "undefined") { if (typeof iconClass === "string") { this.icon = iconClass; } else { if (typeof iconClass === "function") { var response = iconClass(); if (typeof response === "string") { this.icon = response; } else { this.icon = false; } } else { this.icon = false; } } } if (this.isAjaxLoading && !force) { return; } this.$icon.html(this.icon ? '<i class="' + this.icon + '"></i>' : ""); this.updateTitleContainer(); }, updateTitleContainer: function () { if (!this.title && !this.icon) { this.$titleContainer.hide(); } else { this.$titleContainer.show(); } }, setContentPrepend: function (content, force) { if (!content) { return; } this.contentParsed.prepend(content); }, setContentAppend: function (content) { if (!content) { return; } this.contentParsed.append(content); }, setContent: function (content, force) { force = !!force; var that = this; if (content) { this.contentParsed.html("").append(content); } if (this.isAjaxLoading && !force) { return; } this.$content.html(""); this.$content.append(this.contentParsed); setTimeout(function () { that.$body.find("input[autofocus]:visible:first").focus(); }, 100); }, loadingSpinner: false, showLoading: function (disableButtons) { this.loadingSpinner = true; this.$jconfirmBox.addClass("loading"); if (disableButtons) { this.$btnc.find("button").prop("disabled", true); } }, hideLoading: function (enableButtons) { this.loadingSpinner = false; this.$jconfirmBox.removeClass("loading"); if (enableButtons) { this.$btnc.find("button").prop("disabled", false); } }, ajaxResponse: false, contentParsed: "", isAjax: false, isAjaxLoading: false, _parseContent: function () { var that = this; var e = "&nbsp;"; if (typeof this.content === "function") { var res = this.content.apply(this); if (typeof res === "string") { this.content = res; } else { if (typeof res === "object" && typeof res.always === "function") { this.isAjax = true; this.isAjaxLoading = true; res.always(function (data, status, xhr) { that.ajaxResponse = { data: data, status: status, xhr: xhr }; that._contentReady.resolve(data, status, xhr); if (typeof that.contentLoaded === "function") { that.contentLoaded(data, status, xhr); } }); this.content = e; } else { this.content = e; } } } if (typeof this.content === "string" && this.content.substr(0, 4).toLowerCase() === "url:") { this.isAjax = true; this.isAjaxLoading = true; var u = this.content.substring(4, this.content.length); $.get(u).done(function (html) { that.contentParsed.html(html); }).always(function (data, status, xhr) { that.ajaxResponse = { data: data, status: status, xhr: xhr }; that._contentReady.resolve(data, status, xhr); if (typeof that.contentLoaded === "function") { that.contentLoaded(data, status, xhr); } }); } if (!this.content) { this.content = e; } if (!this.isAjax) { this.contentParsed.html(this.content); this.setContent(); that._contentReady.resolve(); } }, _stopCountDown: function () { clearInterval(this.autoCloseInterval); if (this.$cd) { this.$cd.remove(); } }, _startCountDown: function () { var that = this; var opt = this.autoClose.split("|"); if (opt.length !== 2) { console.error("Invalid option for autoClose. example 'close|10000'"); return false; } var button_key = opt[0]; var time = parseInt(opt[1]); if (typeof this.buttons[button_key] === "undefined") { console.error("Invalid button key '" + button_key + "' for autoClose"); return false; } var seconds = Math.ceil(time / 1000); this.$cd = $('<span class="countdown"> (' + seconds + ")</span>").appendTo(this["$_" + button_key]); this.autoCloseInterval = setInterval(function () { that.$cd.html(" (" + (seconds -= 1) + ") "); if (seconds <= 0) { that["$$" + button_key].trigger("click"); that._stopCountDown(); } }, 1000); }, _getKey: function (key) { switch (key) { case 192: return "tilde"; case 13: return "enter"; case 16: return "shift"; case 9: return "tab"; case 20: return "capslock"; case 17: return "ctrl"; case 91: return "win"; case 18: return "alt"; case 27: return "esc"; case 32: return "space"; }var initial = String.fromCharCode(key); if (/^[A-z0-9]+$/.test(initial)) { return initial.toLowerCase(); } else { return false; } }, reactOnKey: function (e) { var that = this; var a = $(".jconfirm"); if (a.eq(a.length - 1)[0] !== this.$el[0]) { return false; } var key = e.which; if (this.$content.find(":input").is(":focus") && /13|32/.test(key)) { return false; } var keyChar = this._getKey(key); if (keyChar === "esc" && this.escapeKey) { if (this.escapeKey === true) { this.$scrollPane.trigger("click"); } else { if (typeof this.escapeKey === "string" || typeof this.escapeKey === "function") { var buttonKey; if (typeof this.escapeKey === "function") { buttonKey = this.escapeKey(); } else { buttonKey = this.escapeKey; } if (buttonKey) { if (typeof this.buttons[buttonKey] === "undefined") { console.warn("Invalid escapeKey, no buttons found with key " + buttonKey); } else { this["$_" + buttonKey].trigger("click"); } } } } } $.each(this.buttons, function (key, button) { if (button.keys.indexOf(keyChar) !== -1) { that["$_" + key].trigger("click"); } }); }, setDialogCenter: function () { console.info("setDialogCenter is deprecated, dialogs are centered with CSS3 tables"); }, _unwatchContent: function () { clearInterval(this._timer); }, close: function (onClosePayload) { var that = this; if (typeof this.onClose === "function") { this.onClose(onClosePayload); } this._unwatchContent(); $(window).unbind("resize." + this._id); $(window).unbind("keyup." + this._id); $(window).unbind("jcKeyDown." + this._id); if (this.draggable) { $(window).unbind("mousemove." + this._id); $(window).unbind("mouseup." + this._id); this.$titleContainer.unbind("mousedown"); } that.$el.removeClass(that.loadedClass); $("body").removeClass("jconfirm-no-scroll-" + that._id); that.$jconfirmBoxContainer.removeClass("jconfirm-no-transition"); setTimeout(function () { that.$body.addClass(that.closeAnimationParsed); that.$jconfirmBg.addClass("jconfirm-bg-h"); var closeTimer = (that.closeAnimation === "none") ? 1 : that.animationSpeed; setTimeout(function () { that.$el.remove(); var l = w.jconfirm.instances; var i = w.jconfirm.instances.length - 1; for (i; i >= 0; i--) { if (w.jconfirm.instances[i]._id === that._id) { w.jconfirm.instances.splice(i, 1); } } if (!w.jconfirm.instances.length) { if (that.scrollToPreviousElement && w.jconfirm.lastFocused && w.jconfirm.lastFocused.length && $.contains(document, w.jconfirm.lastFocused[0])) { var $lf = w.jconfirm.lastFocused; if (that.scrollToPreviousElementAnimate) { var st = $(window).scrollTop(); var ot = w.jconfirm.lastFocused.offset().top; var wh = $(window).height(); if (!(ot > st && ot < (st + wh))) { var scrollTo = (ot - Math.round((wh / 3))); $("html, body").animate({ scrollTop: scrollTo }, that.animationSpeed, "swing", function () { $lf.focus(); }); } else { $lf.focus(); } } else { $lf.focus(); } w.jconfirm.lastFocused = false; } } if (typeof that.onDestroy === "function") { that.onDestroy(); } }, closeTimer * 0.4); }, 50); return true; }, open: function () { if (this.isOpen()) { return false; } this._buildHTML(); this._bindEvents(); this._open(); return true; }, setStartingPoint: function () { var el = false; if (this.animateFromElement !== true && this.animateFromElement) { el = this.animateFromElement; w.jconfirm.lastClicked = false; } else { if (w.jconfirm.lastClicked && this.animateFromElement === true) { el = w.jconfirm.lastClicked; w.jconfirm.lastClicked = false; } else { return false; } } if (!el) { return false; } var offset = el.offset(); var iTop = el.outerHeight() / 2; var iLeft = el.outerWidth() / 2; iTop -= this.$jconfirmBox.outerHeight() / 2; iLeft -= this.$jconfirmBox.outerWidth() / 2; var sourceTop = offset.top + iTop; sourceTop = sourceTop - this._scrollTop(); var sourceLeft = offset.left + iLeft; var wh = $(window).height() / 2; var ww = $(window).width() / 2; var targetH = wh - this.$jconfirmBox.outerHeight() / 2; var targetW = ww - this.$jconfirmBox.outerWidth() / 2; sourceTop -= targetH; sourceLeft -= targetW; if (Math.abs(sourceTop) > wh || Math.abs(sourceLeft) > ww) { return false; } this.$jconfirmBoxContainer.css("transform", "translate(" + sourceLeft + "px, " + sourceTop + "px)"); }, _open: function () { var that = this; if (typeof that.onOpenBefore === "function") { that.onOpenBefore(); } this.$body.removeClass(this.animationParsed); this.$jconfirmBg.removeClass("jconfirm-bg-h"); this.$body.focus(); that.$jconfirmBoxContainer.css("transform", "translate(" + 0 + "px, " + 0 + "px)"); setTimeout(function () { that.$body.css(that._getCSS(that.animationSpeed, 1)); that.$body.css({ "transition-property": that.$body.css("transition-property") + ", margin" }); that.$jconfirmBoxContainer.addClass("jconfirm-no-transition"); that._modalReady.resolve(); if (typeof that.onOpen === "function") { that.onOpen(); } that.$el.addClass(that.loadedClass); }, this.animationSpeed); }, loadedClass: "jconfirm-open", isClosed: function () { return !this.$el || this.$el.parent().length === 0; }, isOpen: function () { return !this.isClosed(); }, toggle: function () { if (!this.isOpen()) { this.open(); } else { this.close(); } } }; w.jconfirm.instances = []; w.jconfirm.lastFocused = false; w.jconfirm.pluginDefaults = { template: '<div class="jconfirm"><div class="jconfirm-bg jconfirm-bg-h"></div><div class="jconfirm-scrollpane"><div class="jconfirm-row"><div class="jconfirm-cell"><div class="jconfirm-holder"><div class="jc-bs3-container"><div class="jc-bs3-row"><div class="jconfirm-box-container jconfirm-animated"><div class="jconfirm-box" role="dialog" aria-labelledby="labelled" tabindex="-1"><div class="jconfirm-closeIcon">&times;</div><div class="jconfirm-title-c"><span class="jconfirm-icon-c"></span><span class="jconfirm-title"></span></div><div class="jconfirm-content-pane"><div class="jconfirm-content"></div></div><div class="jconfirm-buttons"></div><div class="jconfirm-clear"></div></div></div></div></div></div></div></div></div></div>', title: "Hello", titleClass: "", type: "default", typeAnimated: true, draggable: true, dragWindowGap: 15, dragWindowBorder: true, animateFromElement: true, alignMiddle: true, smoothContent: true, content: "Are you sure to continue?", buttons: {}, defaultButtons: { ok: { action: function () { } }, close: { action: function () { } } }, contentLoaded: function () { }, icon: "", lazyOpen: false, bgOpacity: null, theme: "light", animation: "scale", closeAnimation: "scale", animationSpeed: 400, animationBounce: 1, escapeKey: true, rtl: false, container: "body", containerFluid: false, backgroundDismiss: false, backgroundDismissAnimation: "shake", autoClose: false, closeIcon: null, closeIconClass: false, watchInterval: 100, columnClass: "col-md-4 col-md-offset-4 col-sm-6 col-sm-offset-3 col-xs-10 col-xs-offset-1", boxWidth: "50%", scrollToPreviousElement: true, scrollToPreviousElementAnimate: true, useBootstrap: true, offsetTop: 40, offsetBottom: 40, bootstrapClasses: { container: "container", containerFluid: "container-fluid", row: "row" }, onContentReady: function () { }, onOpenBefore: function () { }, onOpen: function () { }, onClose: function () { }, onDestroy: function () { }, onAction: function () { } }; var keyDown = false; $(window).on("keydown", function (e) { if (!keyDown) { var $target = $(e.target); var pass = false; if ($target.closest(".jconfirm-box").length) { pass = true; } if (pass) { $(window).trigger("jcKeyDown"); } keyDown = true; } }); $(window).on("keyup", function () { keyDown = false; }); w.jconfirm.lastClicked = false; $(document).on("mousedown", "button, a, [jc-source]", function () { w.jconfirm.lastClicked = $(this); }); })); "undefined" != typeof document && function (e, t) { var n = e.createElement("style"); n.setAttribute("id", "dh-jconfirm"); if (e.getElementsByTagName("head")[0].appendChild(n), n.styleSheet) n.styleSheet.disabled || (n.styleSheet.cssText = t); else try { n.innerHTML = t } catch (e) { n.innerText = t } }(document, ".jconfirm,.jconfirm .jconfirm-bg{position:fixed;top:0;left:0;right:0;bottom:0}@-webkit-keyframes jconfirm-spin{from{-webkit-transform:rotate(0);transform:rotate(0)}to{-webkit-transform:rotate(360deg);transform:rotate(360deg)}}@keyframes jconfirm-spin{from{-webkit-transform:rotate(0);transform:rotate(0)}to{-webkit-transform:rotate(360deg);transform:rotate(360deg)}}body[class*=jconfirm-no-scroll-]{overflow:hidden!important}.jconfirm .jconfirm-bg{-webkit-transition:opacity .4s;transition:opacity .4s}.jconfirm .jconfirm-bg.jconfirm-bg-h{opacity:0!important}.jconfirm .jconfirm-scrollpane{-webkit-perspective:500px;perspective:500px;-webkit-perspective-origin:center;perspective-origin:center;display:table;width:100%;height:100%}.jconfirm .jconfirm-row{display:table-row;width:100%}.jconfirm .jconfirm-cell{display:table-cell;vertical-align:middle}.jconfirm .jconfirm-holder{max-height:100%;padding:50px 0}.jconfirm .jconfirm-box-container{-webkit-transition:-webkit-transform;transition:transform;transition:transform,-webkit-transform}.jconfirm .jconfirm-box-container.jconfirm-no-transition{-webkit-transition:none!important;transition:none!important}.jconfirm .jconfirm-box{background:#fff;border-radius:4px;position:relative;outline:0;padding:15px 15px 0;overflow:hidden;margin-left:auto;margin-right:auto;opacity:1;-webkit-transition-property:all;transition-property:all}@-webkit-keyframes type-blue{1%,100%{border-color:#3498db}50%{border-color:#5faee3}}@keyframes type-blue{1%,100%{border-color:#3498db}50%{border-color:#5faee3}}@-webkit-keyframes type-green{1%,100%{border-color:#20C997}50%{border-color:#54d98c}}@keyframes type-green{1%,100%{border-color:#20C997}50%{border-color:#54d98c}}@-webkit-keyframes type-red{1%,100%{border-color:#e74c3c}50%{border-color:#ed7669}}@keyframes type-red{1%,100%{border-color:#e74c3c}50%{border-color:#ed7669}}@-webkit-keyframes type-orange{1%,100%{border-color:#f1c40f}50%{border-color:#f4d03f}}@keyframes type-orange{1%,100%{border-color:#f1c40f}50%{border-color:#f4d03f}}@-webkit-keyframes type-purple{1%,100%{border-color:#9b59b6}50%{border-color:#b07cc6}}@keyframes type-purple{1%,100%{border-color:#9b59b6}50%{border-color:#b07cc6}}@-webkit-keyframes type-dark{1%,100%{border-color:#34495e}50%{border-color:#46627f}}@keyframes type-dark{1%,100%{border-color:#34495e}50%{border-color:#46627f}}.jconfirm .jconfirm-box.jconfirm-type-animated{-webkit-animation-duration:2s;animation-duration:2s;-webkit-animation-iteration-count:infinite;animation-iteration-count:infinite}.jconfirm .jconfirm-box.jconfirm-type-blue{border-top:7px solid #3498db;-webkit-animation-name:type-blue;animation-name:type-blue}.jconfirm .jconfirm-box.jconfirm-type-green{border-top:7px solid #20C997;-webkit-animation-name:type-green;animation-name:type-green}.jconfirm .jconfirm-box.jconfirm-type-red{border-top:7px solid #e74c3c;-webkit-animation-name:type-red;animation-name:type-red}.jconfirm .jconfirm-box.jconfirm-type-orange{border-top:7px solid #f1c40f;-webkit-animation-name:type-orange;animation-name:type-orange}.jconfirm .jconfirm-box.jconfirm-type-purple{border-top:7px solid #9b59b6;-webkit-animation-name:type-purple;animation-name:type-purple}.jconfirm .jconfirm-box.jconfirm-type-dark{border-top:7px solid #34495e;-webkit-animation-name:type-dark;animation-name:type-dark}.jconfirm .jconfirm-box.loading{height:120px}.jconfirm .jconfirm-box.loading:before{content:'';position:absolute;left:0;background:#fff;right:0;top:0;bottom:0;border-radius:10px;z-index:1001}.jconfirm .jconfirm-box.loading:after{opacity:.6;content:'';height:30px;width:30px;border:3px solid transparent;position:absolute;left:50%;margin-left:-15px;border-radius:50%;-webkit-animation:1s linear infinite jconfirm-spin;animation:1s linear infinite jconfirm-spin;border-bottom-color:#1e90ff;top:50%;margin-top:-15px;z-index:1002}.jconfirm .jconfirm-box div.jconfirm-closeIcon{height:20px;width:20px;position:absolute;top:10px;right:10px;cursor:pointer;opacity:.6;text-align:center;font-size:27px!important;line-height:14px!important;display:none;z-index:1001}.jconfirm .jconfirm-box div.jconfirm-closeIcon:empty,.jconfirm .jconfirm-box div.jconfirm-content-pane .jconfirm-content:empty,.jconfirm .jconfirm-box div.jconfirm-title-c .jconfirm-icon-c:empty,.jconfirm .jconfirm-box div.jconfirm-title-c .jconfirm-title:empty{display:none}.jconfirm .jconfirm-box div.jconfirm-closeIcon .fa,.jconfirm .jconfirm-box div.jconfirm-closeIcon .glyphicon,.jconfirm .jconfirm-box div.jconfirm-closeIcon .zmdi{font-size:16px}.jconfirm .jconfirm-box div.jconfirm-closeIcon:hover{opacity:1}.jconfirm .jconfirm-box div.jconfirm-title-c{display:block;font-size:22px;line-height:20px;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;cursor:default;padding-bottom:15px}.jconfirm .jconfirm-box div.jconfirm-title-c.jconfirm-hand{cursor:move}.jconfirm .jconfirm-box div.jconfirm-title-c .jconfirm-icon-c{font-size:inherit;display:inline-block;vertical-align:middle}.jconfirm .jconfirm-box div.jconfirm-title-c .jconfirm-icon-c i{vertical-align:middle}.jconfirm .jconfirm-box div.jconfirm-title-c .jconfirm-title{-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;font-size:inherit;font-family:inherit;display:inline-block;vertical-align:middle}.jconfirm .jconfirm-box div.jconfirm-content-pane{margin-bottom:15px;height:auto;-webkit-transition:height .4s ease-in;transition:height .4s ease-in;display:inline-block;width:100%;position:relative;overflow-x:hidden;overflow-y:auto}.jconfirm .jconfirm-box div.jconfirm-content-pane.no-scroll{overflow-y:hidden}.jconfirm .jconfirm-box div.jconfirm-content-pane::-webkit-scrollbar{width:3px}.jconfirm .jconfirm-box div.jconfirm-content-pane::-webkit-scrollbar-track{background:rgba(0,0,0,.1)}.jconfirm .jconfirm-box div.jconfirm-content-pane::-webkit-scrollbar-thumb{background:#666;border-radius:3px}.jconfirm .jconfirm-box div.jconfirm-content-pane .jconfirm-content{overflow:auto}.jconfirm .jconfirm-box div.jconfirm-content-pane .jconfirm-content img{max-width:100%;height:auto}.jconfirm .jconfirm-box .jconfirm-buttons{padding-bottom:11px}.jconfirm .jconfirm-box .jconfirm-buttons>button{margin-bottom:4px;margin-left:2px;margin-right:2px}.jconfirm .jconfirm-box .jconfirm-buttons button{display:inline-block;padding:6px 12px;font-size:14px;font-weight:400;line-height:1.42857143;text-align:center;white-space:nowrap;vertical-align:middle;-ms-touch-action:manipulation;touch-action:manipulation;cursor:pointer;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;border-radius:4px;min-height:1em;-webkit-transition:opacity .1s,background-color .1s,color .1s,background .1s,-webkit-box-shadow .1s;transition:opacity .1s,background-color .1s,color .1s,box-shadow .1s,background .1s,-webkit-box-shadow .1s;-webkit-tap-highlight-color:transparent;border:0;background-image:none}.jconfirm .jconfirm-box .jconfirm-buttons button.btn-blue{background-color:#3498db;color:#fff;text-shadow:none;-webkit-transition:background .2s;transition:background .2s}.jconfirm .jconfirm-box .jconfirm-buttons button.btn-blue:hover{background-color:#2980b9;color:#fff}.jconfirm .jconfirm-box .jconfirm-buttons button.btn-green{background-color:#20C997;color:#fff;text-shadow:none;-webkit-transition:background .2s;transition:background .2s}.jconfirm .jconfirm-box .jconfirm-buttons button.btn-green:hover{background-color:#41d1a7;color:#fff}.jconfirm .jconfirm-box .jconfirm-buttons button.btn-red{background-color:#DC3545;color:#fff;text-shadow:none;-webkit-transition:background .2s;transition:background .2s}.jconfirm .jconfirm-box .jconfirm-buttons button.btn-red:hover{background-color:#bb2d3b;color:#fff}.jconfirm .jconfirm-box .jconfirm-buttons button.btn-orange{background-color:#f1c40f;color:#fff;text-shadow:none;-webkit-transition:background .2s;transition:background .2s}.jconfirm .jconfirm-box .jconfirm-buttons button.btn-orange:hover{background-color:#f39c12;color:#fff}.jconfirm .jconfirm-box .jconfirm-buttons button.btn-default{background-color:#ecf0f1;color:#000;text-shadow:none;-webkit-transition:background .2s;transition:background .2s}.jconfirm .jconfirm-box .jconfirm-buttons button.btn-default:hover{background-color:#bdc3c7;color:#000}.jconfirm .jconfirm-box .jconfirm-buttons button.btn-purple{background-color:#9b59b6;color:#fff;text-shadow:none;-webkit-transition:background .2s;transition:background .2s}.jconfirm .jconfirm-box .jconfirm-buttons button.btn-purple:hover{background-color:#8e44ad;color:#fff}.jconfirm .jconfirm-box .jconfirm-buttons button.btn-dark{background-color:#34495e;color:#fff;text-shadow:none;-webkit-transition:background .2s;transition:background .2s}.jconfirm .jconfirm-box .jconfirm-buttons button.btn-dark:hover{background-color:#2c3e50;color:#fff}.jconfirm .jconfirm-box.jconfirm-type-red .jconfirm-title-c .jconfirm-icon-c{color:#e74c3c!important}.jconfirm .jconfirm-box.jconfirm-type-blue .jconfirm-title-c .jconfirm-icon-c{color:#3498db!important}.jconfirm .jconfirm-box.jconfirm-type-green .jconfirm-title-c .jconfirm-icon-c{color:#20C997!important}.jconfirm .jconfirm-box.jconfirm-type-purple .jconfirm-title-c .jconfirm-icon-c{color:#9b59b6!important}.jconfirm .jconfirm-box.jconfirm-type-orange .jconfirm-title-c .jconfirm-icon-c{color:#f1c40f!important}.jconfirm .jconfirm-box.jconfirm-type-dark .jconfirm-title-c .jconfirm-icon-c{color:#34495e!important}.jconfirm .jconfirm-clear{clear:both}.jconfirm.jconfirm-rtl{direction:rtl}.jconfirm.jconfirm-rtl div.jconfirm-closeIcon{left:5px;right:auto}.jconfirm.jconfirm-light .jconfirm-bg,.jconfirm.jconfirm-white .jconfirm-bg{background-color:#00000066;}.jconfirm.jconfirm-light .jconfirm-box,.jconfirm.jconfirm-white .jconfirm-box{-webkit-box-shadow:0 2px 6px rgba(0,0,0,.2);box-shadow:0 2px 6px rgba(0,0,0,.2);border-radius:5px}.jconfirm.jconfirm-black .jconfirm-box .jconfirm-title-c .jconfirm-icon-c,.jconfirm.jconfirm-bootstrap .jconfirm-box .jconfirm-title-c .jconfirm-icon-c,.jconfirm.jconfirm-dark .jconfirm-box .jconfirm-title-c .jconfirm-icon-c,.jconfirm.jconfirm-light .jconfirm-box .jconfirm-title-c .jconfirm-icon-c,.jconfirm.jconfirm-material .jconfirm-box .jconfirm-title-c .jconfirm-icon-c,.jconfirm.jconfirm-supervan .jconfirm-box div.jconfirm-title-c .jconfirm-icon-c,.jconfirm.jconfirm-white .jconfirm-box .jconfirm-title-c .jconfirm-icon-c{margin-right:8px;margin-left:0}.jconfirm.jconfirm-black .jconfirm-box .jconfirm-buttons,.jconfirm.jconfirm-dark .jconfirm-box .jconfirm-buttons,.jconfirm.jconfirm-light .jconfirm-box .jconfirm-buttons,.jconfirm.jconfirm-white .jconfirm-box .jconfirm-buttons{float:right}.jconfirm.jconfirm-light .jconfirm-box .jconfirm-buttons button,.jconfirm.jconfirm-white .jconfirm-box .jconfirm-buttons button{text-transform:uppercase;font-size:14px;font-weight:700;text-shadow:none}.jconfirm.jconfirm-light .jconfirm-box .jconfirm-buttons button.btn-default,.jconfirm.jconfirm-white .jconfirm-box .jconfirm-buttons button.btn-default{-webkit-box-shadow:none;box-shadow:none;color:#333}.jconfirm.jconfirm-light .jconfirm-box .jconfirm-buttons button.btn-default:hover,.jconfirm.jconfirm-white .jconfirm-box .jconfirm-buttons button.btn-default:hover{background:#ddd}.jconfirm.jconfirm-black.jconfirm-rtl .jconfirm-title-c .jconfirm-icon-c,.jconfirm.jconfirm-bootstrap.jconfirm-rtl .jconfirm-title-c .jconfirm-icon-c,.jconfirm.jconfirm-dark.jconfirm-rtl .jconfirm-title-c .jconfirm-icon-c,.jconfirm.jconfirm-light.jconfirm-rtl .jconfirm-title-c .jconfirm-icon-c,.jconfirm.jconfirm-material.jconfirm-rtl .jconfirm-title-c .jconfirm-icon-c,.jconfirm.jconfirm-supervan.jconfirm-rtl .jconfirm-box div.jconfirm-title-c .jconfirm-icon-c,.jconfirm.jconfirm-white.jconfirm-rtl .jconfirm-title-c .jconfirm-icon-c{margin-left:8px;margin-right:0}.jconfirm.jconfirm-black .jconfirm-bg,.jconfirm.jconfirm-dark .jconfirm-bg{background-color:#2f4f4f;opacity:.4}.jconfirm.jconfirm-black .jconfirm-box,.jconfirm.jconfirm-dark .jconfirm-box{-webkit-box-shadow:0 2px 6px rgba(0,0,0,.2);box-shadow:0 2px 6px rgba(0,0,0,.2);background:#444;border-radius:5px;color:#fff}.jconfirm.jconfirm-black .jconfirm-box .jconfirm-buttons button,.jconfirm.jconfirm-dark .jconfirm-box .jconfirm-buttons button{border:0;background-image:none;text-transform:uppercase;font-size:14px;font-weight:700;text-shadow:none;-webkit-transition:background .1s;transition:background .1s;color:#fff}.jconfirm.jconfirm-black .jconfirm-box .jconfirm-buttons button.btn-default,.jconfirm.jconfirm-dark .jconfirm-box .jconfirm-buttons button.btn-default{-webkit-box-shadow:none;box-shadow:none;color:#fff;background:0}.jconfirm.jconfirm-black .jconfirm-box .jconfirm-buttons button.btn-default:hover,.jconfirm.jconfirm-dark .jconfirm-box .jconfirm-buttons button.btn-default:hover{background:#666}.jconfirm .jconfirm-box.hilight.jconfirm-hilight-shake{-webkit-animation:.82s cubic-bezier(.36,.07,.19,.97) both shake;animation:.82s cubic-bezier(.36,.07,.19,.97) both shake;-webkit-transform:translate3d(0,0,0);transform:translate3d(0,0,0)}.jconfirm .jconfirm-box.hilight.jconfirm-hilight-glow{-webkit-animation:.82s cubic-bezier(.36,.07,.19,.97) both glow;animation:.82s cubic-bezier(.36,.07,.19,.97) both glow;-webkit-transform:translate3d(0,0,0);transform:translate3d(0,0,0)}@-webkit-keyframes shake{10%,90%{-webkit-transform:translate3d(-2px,0,0);transform:translate3d(-2px,0,0)}20%,80%{-webkit-transform:translate3d(4px,0,0);transform:translate3d(4px,0,0)}30%,50%,70%{-webkit-transform:translate3d(-8px,0,0);transform:translate3d(-8px,0,0)}40%,60%{-webkit-transform:translate3d(8px,0,0);transform:translate3d(8px,0,0)}}@keyframes shake{10%,90%{-webkit-transform:translate3d(-2px,0,0);transform:translate3d(-2px,0,0)}20%,80%{-webkit-transform:translate3d(4px,0,0);transform:translate3d(4px,0,0)}30%,50%,70%{-webkit-transform:translate3d(-8px,0,0);transform:translate3d(-8px,0,0)}40%,60%{-webkit-transform:translate3d(8px,0,0);transform:translate3d(8px,0,0)}}@-webkit-keyframes glow{0%,100%{-webkit-box-shadow:0 0 0 red;box-shadow:0 0 0 red}50%{-webkit-box-shadow:0 0 30px red;box-shadow:0 0 30px red}}@keyframes glow{0%,100%{-webkit-box-shadow:0 0 0 red;box-shadow:0 0 0 red}50%{-webkit-box-shadow:0 0 30px red;box-shadow:0 0 30px red}}.jconfirm{z-index:1003;font-family:inherit;overflow:hidden;-webkit-perspective:400px;perspective:400px}.jconfirm .jconfirm-box.jconfirm-animation-bottom,.jconfirm .jconfirm-box.jconfirm-animation-left,.jconfirm .jconfirm-box.jconfirm-animation-none,.jconfirm .jconfirm-box.jconfirm-animation-opacity,.jconfirm .jconfirm-box.jconfirm-animation-right,.jconfirm .jconfirm-box.jconfirm-animation-rotate,.jconfirm .jconfirm-box.jconfirm-animation-rotatex,.jconfirm .jconfirm-box.jconfirm-animation-rotatey,.jconfirm .jconfirm-box.jconfirm-animation-scale,.jconfirm .jconfirm-box.jconfirm-animation-scalex,.jconfirm .jconfirm-box.jconfirm-animation-scaley,.jconfirm .jconfirm-box.jconfirm-animation-top,.jconfirm .jconfirm-box.jconfirm-animation-zoom{opacity:0}.jconfirm .jconfirm-box.jconfirm-animation-rotate{-webkit-transform:rotate(90deg);transform:rotate(90deg)}.jconfirm .jconfirm-box.jconfirm-animation-rotatex{-webkit-transform:rotateX(90deg);transform:rotateX(90deg);-webkit-transform-origin:center;transform-origin:center}.jconfirm .jconfirm-box.jconfirm-animation-rotatexr{-webkit-transform:rotateX(-90deg);transform:rotateX(-90deg);-webkit-transform-origin:center;transform-origin:center}.jconfirm .jconfirm-box.jconfirm-animation-rotatey{-webkit-transform:rotatey(90deg);transform:rotatey(90deg);-webkit-transform-origin:center;transform-origin:center}.jconfirm .jconfirm-box.jconfirm-animation-rotateyr{-webkit-transform:rotatey(-90deg);transform:rotatey(-90deg);-webkit-transform-origin:center;transform-origin:center}.jconfirm .jconfirm-box.jconfirm-animation-scaley{-webkit-transform:scaley(1.5);transform:scaley(1.5);-webkit-transform-origin:center;transform-origin:center}.jconfirm .jconfirm-box.jconfirm-animation-scalex{-webkit-transform:scalex(1.5);transform:scalex(1.5);-webkit-transform-origin:center;transform-origin:center}.jconfirm .jconfirm-box.jconfirm-animation-top{-webkit-transform:translate(0,-100px);transform:translate(0,-100px)}.jconfirm .jconfirm-box.jconfirm-animation-left{-webkit-transform:translate(-100px,0);transform:translate(-100px,0)}.jconfirm .jconfirm-box.jconfirm-animation-right{-webkit-transform:translate(100px,0);transform:translate(100px,0)}.jconfirm .jconfirm-box.jconfirm-animation-bottom{-webkit-transform:translate(0,100px);transform:translate(0,100px)}.jconfirm .jconfirm-box.jconfirm-animation-zoom{-webkit-transform:scale(1.2);transform:scale(1.2)}.jconfirm .jconfirm-box.jconfirm-animation-scale{-webkit-transform:scale(.5);transform:scale(.5)}.jconfirm .jconfirm-box.jconfirm-animation-none{visibility:hidden}.jconfirm.jconfirm-supervan .jconfirm-bg{background-color:rgba(54,70,93,.95)}.jconfirm.jconfirm-supervan .jconfirm-box{background-color:transparent}.jconfirm.jconfirm-supervan .jconfirm-box.jconfirm-type-blue,.jconfirm.jconfirm-supervan .jconfirm-box.jconfirm-type-dark,.jconfirm.jconfirm-supervan .jconfirm-box.jconfirm-type-green,.jconfirm.jconfirm-supervan .jconfirm-box.jconfirm-type-orange,.jconfirm.jconfirm-supervan .jconfirm-box.jconfirm-type-purple,.jconfirm.jconfirm-supervan .jconfirm-box.jconfirm-type-red{border:0}.jconfirm.jconfirm-supervan .jconfirm-box div.jconfirm-closeIcon{color:#fff}.jconfirm.jconfirm-supervan .jconfirm-box div.jconfirm-title-c{text-align:center;color:#fff;font-size:28px;font-weight:400}.jconfirm.jconfirm-supervan .jconfirm-box div.jconfirm-title-c>*{padding-bottom:25px}.jconfirm.jconfirm-supervan .jconfirm-box div.jconfirm-content-pane{margin-bottom:25px}.jconfirm.jconfirm-supervan .jconfirm-box div.jconfirm-content{text-align:center;color:#fff}.jconfirm.jconfirm-modern .jconfirm-box .jconfirm-buttons,.jconfirm.jconfirm-supervan .jconfirm-box .jconfirm-buttons{text-align:center}.jconfirm.jconfirm-supervan .jconfirm-box .jconfirm-buttons button{font-size:16px;border-radius:2px;background:#303f53;text-shadow:none;border:0;color:#fff;padding:10px;min-width:100px}.jconfirm.jconfirm-material .jconfirm-bg{background-color:rgba(0,0,0,.67)}.jconfirm.jconfirm-material .jconfirm-box{background-color:#fff;-webkit-box-shadow:0 7px 8px -4px rgba(0,0,0,.2),0 13px 19px 2px rgba(0,0,0,.14),0 5px 24px 4px rgba(0,0,0,.12);box-shadow:0 7px 8px -4px rgba(0,0,0,.2),0 13px 19px 2px rgba(0,0,0,.14),0 5px 24px 4px rgba(0,0,0,.12);padding:30px 25px 10px}.jconfirm.jconfirm-bootstrap .jconfirm-box div.jconfirm-closeIcon,.jconfirm.jconfirm-material .jconfirm-box div.jconfirm-closeIcon,.jconfirm.jconfirm-material .jconfirm-box div.jconfirm-content{color:rgba(0,0,0,.87)}.jconfirm.jconfirm-material .jconfirm-box div.jconfirm-title-c{color:rgba(0,0,0,.87);font-size:22px;font-weight:700}.jconfirm.jconfirm-material .jconfirm-box .jconfirm-buttons{text-align:right}.jconfirm.jconfirm-material .jconfirm-box .jconfirm-buttons button{text-transform:uppercase;font-weight:500}.jconfirm.jconfirm-bootstrap .jconfirm-bg{background-color:rgba(0,0,0,.21)}.jconfirm.jconfirm-bootstrap .jconfirm-box{background-color:#fff;-webkit-box-shadow:0 3px 8px 0 rgba(0,0,0,.2);box-shadow:0 3px 8px 0 rgba(0,0,0,.2);border:1px solid rgba(0,0,0,.4);padding:15px 0 0}.jconfirm.jconfirm-bootstrap .jconfirm-box div.jconfirm-title-c{color:rgba(0,0,0,.87);font-size:22px;font-weight:700;padding-left:15px;padding-right:15px}.jconfirm.jconfirm-bootstrap .jconfirm-box div.jconfirm-content{color:rgba(0,0,0,.87);padding:0 15px}.jconfirm.jconfirm-bootstrap .jconfirm-box .jconfirm-buttons{text-align:right;padding:10px;margin:-5px 0 0;border-top:1px solid #ddd;overflow:hidden;border-radius:0 0 4px 4px}.jconfirm.jconfirm-bootstrap .jconfirm-box .jconfirm-buttons button{font-weight:500}.jconfirm.jconfirm-modern .jconfirm-bg{background-color:#708090;opacity:.6}.jconfirm.jconfirm-modern .jconfirm-box{background-color:#fff;-webkit-box-shadow:0 7px 8px -4px rgba(0,0,0,.2),0 13px 19px 2px rgba(0,0,0,.14),0 5px 24px 4px rgba(0,0,0,.12);box-shadow:0 7px 8px -4px rgba(0,0,0,.2),0 13px 19px 2px rgba(0,0,0,.14),0 5px 24px 4px rgba(0,0,0,.12);padding:30px 30px 15px}.jconfirm.jconfirm-modern .jconfirm-box div.jconfirm-closeIcon{color:rgba(0,0,0,.87);top:15px;right:15px}.jconfirm.jconfirm-modern .jconfirm-box div.jconfirm-title-c{color:rgba(0,0,0,.87);font-size:24px;font-weight:700;text-align:center;margin-bottom:10px}.jconfirm.jconfirm-modern .jconfirm-box div.jconfirm-title-c .jconfirm-icon-c{-webkit-transition:-webkit-transform .5s;transition:transform .5s;transition:transform .5s,-webkit-transform .5s;-webkit-transform:scale(0);transform:scale(0);display:block;margin-right:0;margin-left:0;margin-bottom:10px;font-size:69px;color:#aaa}.jconfirm.jconfirm-modern .jconfirm-box div.jconfirm-content{text-align:center;font-size:15px;color:#777;margin-bottom:25px}.jconfirm.jconfirm-modern .jconfirm-box .jconfirm-buttons button{font-weight:700;text-transform:uppercase;-webkit-transition:background .1s;transition:background .1s;padding:10px 20px}.jconfirm.jconfirm-modern .jconfirm-box .jconfirm-buttons button+button{margin-left:4px}.jconfirm.jconfirm-modern.jconfirm-open .jconfirm-box .jconfirm-title-c .jconfirm-icon-c{-webkit-transform:scale(1);transform:scale(1)}");


// ============================dhConfirm.js========================
! function (t) {
	"function" == typeof define && define.amd ? define(["jquery"], t) : "object" == typeof module && module.exports ? module.exports = function (e, i) {
		return void 0 === i && (i = "undefined" != typeof window ? require("jquery") : require("jquery")(e)), t(i), i
	} : t(jQuery)
}(function (t) {
	$.dhConfirm = function (options) {
		var jcOption = $.extend({}, options);
		if (typeof jcOption.dhDataTable == 'undefined'){
			jcOption.dhDataTable = true;
		}
		/* console.log(jcOption.dhDataTable); */
		/* console.log(jcOption.dhtext); */
		$.confirm({
			title: 'Confirm!',
			content: jcOption.dhContent,
			closeIcon: true,
			backgroundDismiss: true,
			scrollToPreviousElement:false,
			buttons: {
				Proceed: {
					text: '<i class="fa fa-check me-2"></i>Yes',
					btnClass: 'btn-green',
					keys: ['enter'],
					action: function () {
						dhStartLoad();
						$.ajax({
							url: jcOption.dhUrl,
							type: 'GET',
							dataType: 'json',
							success: function (data) {
							  if (data) {
								if (data.dhSession) {
								  sessionStorage.setItem("dhSession", JSON.stringify(data.dhSession));
								}
								if (jcOption.dhDataTable) {
								  $('.dataTable').DataTable().draw(false);
								}
								if (typeof data.dhFunction !== 'undefined') {
								  var dhFunction = data.dhFunction;
								  window[dhFunction]();
								}
								if (data.dhRedirect) {
								  location.replace(data.dhRedirect);
								} else {
								  dhCheckNotify();
								}
							  }
							},
							complete: function () {
								dhEndLoad();
							}
						  });

						/* $.get(jcOption.dhUrl, function (data, status) {
							if (status == "success") {
								var obj = JSON.parse(data);
								if (obj.dhSession) {
									sessionStorage.setItem("dhSession", JSON.stringify(obj.dhSession));
								}
								if (jcOption.dhDataTable) {
									$('.dataTable').DataTable().draw(false);
								}
								if (typeof obj.dhFunction !== 'undefined') {
									var dhFunction = obj.dhFunction;
									window[dhFunction]()
								}
								if (obj.dhRedirect) {
									location.replace(obj.dhRedirect);
								}
								else{
									dhEndLoad();
									dhCheckNotify();
								}
							}
						}); */
					}
				},
				Cancel: {
					text: '<i class="fa fa-times me-2"></i>No',
					btnClass: 'btn-red',
					action: function () { }// multiple classes.
				},
			}
		});

	};

});

// =======================EXTRA FOR PROJECT==================

$("#di_search").on('keypress', function (e) {
	if (e.which == 13) {
		$("#di_search_btn").click();
	}
});